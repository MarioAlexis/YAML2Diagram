{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Diagrams as code",
    "description": "Diagrams as code's YAML JSON schema",
    "$ref": "#/definitions/Welcome5",
    "definitions": {
        "Welcome5": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "diagram": {
                    "$ref": "#/definitions/Diagram"
                }
            },
            "required": [
                "diagram"
            ],
            "title": "Welcome5"
        },
        "Diagram": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A name of the diagram which is shown in the image"
                },
                "file_name": {
                    "type": "string",
                    "description": "A file name of the image that would be created"
                },
                "format": {
                    "type": "string",
                    "description": "A format of the image that would be created",
                    "oneOf": [
                        {
                          "const": "png"
                        },
                        {
                          "const": "jpg"
                        },
                        {
                          "const": "svg"
                        }
                    ]
                },
                "direction": {
                    "type": "string",
                    "description": "A direction of the diagram's resource",
                    "oneOf": [
                        {
                          "const": "left-to-right"
                        },
                        {
                          "const": "right-to-left"
                        },
                        {
                          "const": "top-to-bottom"
                        },
                        {
                          "const": "bottom-to-top"
                        }
                    ]
                },
                "style": {
                    "$ref": "#/definitions/Style",
                    "description": "Style of the diagram"
                },
                "label_resources": {
                    "type": "boolean",
                    "description": "Whether to label the diagram's resources"
                },
                "resources": {
                    "type": "array",
                    "description": "Resources of the diagram",
                    "items": {
                        "$ref": "#/definitions/Resource"
                    }
                }
            },
            "required": [
                "name",
                "resources"
            ],
            "title": "Diagram"
        },
        "Resource": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A unique identifier of the resource"
                },
                "name": {
                    "type": "string",
                    "description": "A name of the resource"
                },
                "type": {
                    "type": "string",
                    "description": "A type of the resource",
                    "oneOf": [
                        {
                            "const": "cluster"
                        },
                        {
                            "const": "group"
                        },
                        {
                            "const": "alibabacloud.analytics.AnalyticDb"
                        },
                        {
                            "const": "alibabacloud.analytics.ClickHouse"
                        },
                        {
                            "const": "alibabacloud.analytics.DataLakeAnalytics"
                        },
                        {
                            "const": "alibabacloud.analytics.ElaticMapReduce"
                        },
                        {
                            "const": "alibabacloud.analytics.OpenSearch"
                        },
                        {
                            "const": "alibabacloud.application.ApiGateway"
                        },
                        {
                            "const": "alibabacloud.application.BeeBot"
                        },
                        {
                            "const": "alibabacloud.application.BlockchainAsAService"
                        },
                        {
                            "const": "alibabacloud.application.CloudCallCenter"
                        },
                        {
                            "const": "alibabacloud.application.CodePipeline"
                        },
                        {
                            "const": "alibabacloud.application.DirectMail"
                        },
                        {
                            "const": "alibabacloud.application.LogService"
                        },
                        {
                            "const": "alibabacloud.application.SLS"
                        },
                        {
                            "const": "alibabacloud.application.MessageNotificationService"
                        },
                        {
                            "const": "alibabacloud.application.MNS"
                        },
                        {
                            "const": "alibabacloud.application.NodeJsPerformancePlatform"
                        },
                        {
                            "const": "alibabacloud.application.OpenSearch"
                        },
                        {
                            "const": "alibabacloud.application.PerformanceTestingService"
                        },
                        {
                            "const": "alibabacloud.application.PTS"
                        },
                        {
                            "const": "alibabacloud.application.RdCloud"
                        },
                        {
                            "const": "alibabacloud.application.SmartConversationAnalysis"
                        },
                        {
                            "const": "alibabacloud.application.SCA"
                        },
                        {
                            "const": "alibabacloud.application.Yida"
                        },
                        {
                            "const": "alibabacloud.communication.DirectMail"
                        },
                        {
                            "const": "alibabacloud.communication.MobilePush"
                        },
                        {
                            "const": "alibabacloud.compute.AutoScaling"
                        },
                        {
                            "const": "alibabacloud.compute.ESS"
                        },
                        {
                            "const": "alibabacloud.compute.BatchCompute"
                        },
                        {
                            "const": "alibabacloud.compute.ContainerRegistry"
                        },
                        {
                            "const": "alibabacloud.compute.ContainerService"
                        },
                        {
                            "const": "alibabacloud.compute.ElasticComputeService"
                        },
                        {
                            "const": "alibabacloud.compute.ECS"
                        },
                        {
                            "const": "alibabacloud.compute.ElasticContainerInstance"
                        },
                        {
                            "const": "alibabacloud.compute.ECI"
                        },
                        {
                            "const": "alibabacloud.compute.ElasticHighPerformanceComputing"
                        },
                        {
                            "const": "alibabacloud.compute.EHPC"
                        },
                        {
                            "const": "alibabacloud.compute.ElasticSearch"
                        },
                        {
                            "const": "alibabacloud.compute.FunctionCompute"
                        },
                        {
                            "const": "alibabacloud.compute.FC"
                        },
                        {
                            "const": "alibabacloud.compute.OperationOrchestrationService"
                        },
                        {
                            "const": "alibabacloud.compute.OOS"
                        },
                        {
                            "const": "alibabacloud.compute.ResourceOrchestrationService"
                        },
                        {
                            "const": "alibabacloud.compute.ROS"
                        },
                        {
                            "const": "alibabacloud.compute.ServerLoadBalancer"
                        },
                        {
                            "const": "alibabacloud.compute.SLB"
                        },
                        {
                            "const": "alibabacloud.compute.ServerlessAppEngine"
                        },
                        {
                            "const": "alibabacloud.compute.SAE"
                        },
                        {
                            "const": "alibabacloud.compute.SimpleApplicationServer"
                        },
                        {
                            "const": "alibabacloud.compute.SAS"
                        },
                        {
                            "const": "alibabacloud.compute.WebAppService"
                        },
                        {
                            "const": "alibabacloud.compute.WAS"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbCassandra"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbHbase"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbMemcache"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbMongodb"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbOceanbase"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbPolardb"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbPostgresql"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbPpas"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbRedis"
                        },
                        {
                            "const": "alibabacloud.database.ApsaradbSqlserver"
                        },
                        {
                            "const": "alibabacloud.database.DataManagementService"
                        },
                        {
                            "const": "alibabacloud.database.DMS"
                        },
                        {
                            "const": "alibabacloud.database.DataTransmissionService"
                        },
                        {
                            "const": "alibabacloud.database.DTS"
                        },
                        {
                            "const": "alibabacloud.database.DatabaseBackupService"
                        },
                        {
                            "const": "alibabacloud.database.DBS"
                        },
                        {
                            "const": "alibabacloud.database.DisributeRelationalDatabaseService"
                        },
                        {
                            "const": "alibabacloud.database.DRDS"
                        },
                        {
                            "const": "alibabacloud.database.GraphDatabaseService"
                        },
                        {
                            "const": "alibabacloud.database.GDS"
                        },
                        {
                            "const": "alibabacloud.database.HybriddbForMysql"
                        },
                        {
                            "const": "alibabacloud.database.RelationalDatabaseService"
                        },
                        {
                            "const": "alibabacloud.database.RDS"
                        },
                        {
                            "const": "alibabacloud.iot.IotInternetDeviceId"
                        },
                        {
                            "const": "alibabacloud.iot.IotLinkWan"
                        },
                        {
                            "const": "alibabacloud.iot.IotMobileConnectionPackage"
                        },
                        {
                            "const": "alibabacloud.iot.IotPlatform"
                        },
                        {
                            "const": "alibabacloud.network.Cdn"
                        },
                        {
                            "const": "alibabacloud.network.CloudEnterpriseNetwork"
                        },
                        {
                            "const": "alibabacloud.network.CEN"
                        },
                        {
                            "const": "alibabacloud.network.ElasticIpAddress"
                        },
                        {
                            "const": "alibabacloud.network.EIP"
                        },
                        {
                            "const": "alibabacloud.network.ExpressConnect"
                        },
                        {
                            "const": "alibabacloud.network.NatGateway"
                        },
                        {
                            "const": "alibabacloud.network.ServerLoadBalancer"
                        },
                        {
                            "const": "alibabacloud.network.SLB"
                        },
                        {
                            "const": "alibabacloud.network.SmartAccessGateway"
                        },
                        {
                            "const": "alibabacloud.network.VirtualPrivateCloud"
                        },
                        {
                            "const": "alibabacloud.network.VPC"
                        },
                        {
                            "const": "alibabacloud.network.VpnGateway"
                        },
                        {
                            "const": "alibabacloud.security.AntiBotService"
                        },
                        {
                            "const": "alibabacloud.security.ABS"
                        },
                        {
                            "const": "alibabacloud.security.AntiDdosBasic"
                        },
                        {
                            "const": "alibabacloud.security.AntiDdosPro"
                        },
                        {
                            "const": "alibabacloud.security.AntifraudService"
                        },
                        {
                            "const": "alibabacloud.security.AS"
                        },
                        {
                            "const": "alibabacloud.security.BastionHost"
                        },
                        {
                            "const": "alibabacloud.security.CloudFirewall"
                        },
                        {
                            "const": "alibabacloud.security.CFW"
                        },
                        {
                            "const": "alibabacloud.security.CloudSecurityScanner"
                        },
                        {
                            "const": "alibabacloud.security.ContentModeration"
                        },
                        {
                            "const": "alibabacloud.security.CM"
                        },
                        {
                            "const": "alibabacloud.security.CrowdsourcedSecurityTesting"
                        },
                        {
                            "const": "alibabacloud.security.DataEncryptionService"
                        },
                        {
                            "const": "alibabacloud.security.DES"
                        },
                        {
                            "const": "alibabacloud.security.DbAudit"
                        },
                        {
                            "const": "alibabacloud.security.GameShield"
                        },
                        {
                            "const": "alibabacloud.security.IdVerification"
                        },
                        {
                            "const": "alibabacloud.security.ManagedSecurityService"
                        },
                        {
                            "const": "alibabacloud.security.SecurityCenter"
                        },
                        {
                            "const": "alibabacloud.security.ServerGuard"
                        },
                        {
                            "const": "alibabacloud.security.SslCertificates"
                        },
                        {
                            "const": "alibabacloud.security.WebApplicationFirewall"
                        },
                        {
                            "const": "alibabacloud.security.WAF"
                        },
                        {
                            "const": "alibabacloud.storage.CloudStorageGateway"
                        },
                        {
                            "const": "alibabacloud.storage.FileStorageHdfs"
                        },
                        {
                            "const": "alibabacloud.storage.HDFS"
                        },
                        {
                            "const": "alibabacloud.storage.FileStorageNas"
                        },
                        {
                            "const": "alibabacloud.storage.NAS"
                        },
                        {
                            "const": "alibabacloud.storage.HybridBackupRecovery"
                        },
                        {
                            "const": "alibabacloud.storage.HBR"
                        },
                        {
                            "const": "alibabacloud.storage.HybridCloudDisasterRecovery"
                        },
                        {
                            "const": "alibabacloud.storage.HDR"
                        },
                        {
                            "const": "alibabacloud.storage.Imm"
                        },
                        {
                            "const": "alibabacloud.storage.ObjectStorageService"
                        },
                        {
                            "const": "alibabacloud.storage.OSS"
                        },
                        {
                            "const": "alibabacloud.storage.ObjectTableStore"
                        },
                        {
                            "const": "alibabacloud.storage.OTS"
                        },
                        {
                            "const": "alibabacloud.web.Dns"
                        },
                        {
                            "const": "alibabacloud.web.Domain"
                        },
                        {
                            "const": "aws.analytics.Analytics"
                        },
                        {
                            "const": "aws.analytics.Athena"
                        },
                        {
                            "const": "aws.analytics.CloudsearchSearchDocuments"
                        },
                        {
                            "const": "aws.analytics.Cloudsearch"
                        },
                        {
                            "const": "aws.analytics.DataLakeResource"
                        },
                        {
                            "const": "aws.analytics.DataPipeline"
                        },
                        {
                            "const": "aws.analytics.ElasticsearchService"
                        },
                        {
                            "const": "aws.analytics.ES"
                        },
                        {
                            "const": "aws.analytics.EMRCluster"
                        },
                        {
                            "const": "aws.analytics.EMREngineMaprM3"
                        },
                        {
                            "const": "aws.analytics.EMREngineMaprM5"
                        },
                        {
                            "const": "aws.analytics.EMREngineMaprM7"
                        },
                        {
                            "const": "aws.analytics.EMREngine"
                        },
                        {
                            "const": "aws.analytics.EMRHdfsCluster"
                        },
                        {
                            "const": "aws.analytics.EMR"
                        },
                        {
                            "const": "aws.analytics.GlueCrawlers"
                        },
                        {
                            "const": "aws.analytics.GlueDataCatalog"
                        },
                        {
                            "const": "aws.analytics.Glue"
                        },
                        {
                            "const": "aws.analytics.KinesisDataAnalytics"
                        },
                        {
                            "const": "aws.analytics.KinesisDataFirehose"
                        },
                        {
                            "const": "aws.analytics.KinesisDataStreams"
                        },
                        {
                            "const": "aws.analytics.KinesisVideoStreams"
                        },
                        {
                            "const": "aws.analytics.Kinesis"
                        },
                        {
                            "const": "aws.analytics.LakeFormation"
                        },
                        {
                            "const": "aws.analytics.ManagedStreamingForKafka"
                        },
                        {
                            "const": "aws.analytics.Quicksight"
                        },
                        {
                            "const": "aws.analytics.RedshiftDenseComputeNode"
                        },
                        {
                            "const": "aws.analytics.RedshiftDenseStorageNode"
                        },
                        {
                            "const": "aws.analytics.Redshift"
                        },
                        {
                            "const": "aws.ar.ArVr"
                        },
                        {
                            "const": "aws.ar.Sumerian"
                        },
                        {
                            "const": "aws.blockchain.BlockchainResource"
                        },
                        {
                            "const": "aws.blockchain.Blockchain"
                        },
                        {
                            "const": "aws.blockchain.ManagedBlockchain"
                        },
                        {
                            "const": "aws.blockchain.QuantumLedgerDatabaseQldb"
                        },
                        {
                            "const": "aws.blockchain.QLDB"
                        },
                        {
                            "const": "aws.business.AlexaForBusiness"
                        },
                        {
                            "const": "aws.business.A4B"
                        },
                        {
                            "const": "aws.business.BusinessApplications"
                        },
                        {
                            "const": "aws.business.Chime"
                        },
                        {
                            "const": "aws.business.Workmail"
                        },
                        {
                            "const": "aws.compute.AppRunner"
                        },
                        {
                            "const": "aws.compute.ApplicationAutoScaling"
                        },
                        {
                            "const": "aws.compute.AutoScaling"
                        },
                        {
                            "const": "aws.compute.Batch"
                        },
                        {
                            "const": "aws.compute.ComputeOptimizer"
                        },
                        {
                            "const": "aws.compute.Compute"
                        },
                        {
                            "const": "aws.compute.EC2Ami"
                        },
                        {
                            "const": "aws.compute.AMI"
                        },
                        {
                            "const": "aws.compute.EC2AutoScaling"
                        },
                        {
                            "const": "aws.compute.EC2ContainerRegistryImage"
                        },
                        {
                            "const": "aws.compute.EC2ContainerRegistryRegistry"
                        },
                        {
                            "const": "aws.compute.EC2ContainerRegistry"
                        },
                        {
                            "const": "aws.compute.ECR"
                        },
                        {
                            "const": "aws.compute.EC2ElasticIpAddress"
                        },
                        {
                            "const": "aws.compute.EC2ImageBuilder"
                        },
                        {
                            "const": "aws.compute.EC2Instance"
                        },
                        {
                            "const": "aws.compute.EC2Instances"
                        },
                        {
                            "const": "aws.compute.EC2Rescue"
                        },
                        {
                            "const": "aws.compute.EC2SpotInstance"
                        },
                        {
                            "const": "aws.compute.EC2"
                        },
                        {
                            "const": "aws.compute.ElasticBeanstalkApplication"
                        },
                        {
                            "const": "aws.compute.ElasticBeanstalkDeployment"
                        },
                        {
                            "const": "aws.compute.ElasticBeanstalk"
                        },
                        {
                            "const": "aws.compute.EB"
                        },
                        {
                            "const": "aws.compute.ElasticContainerServiceContainer"
                        },
                        {
                            "const": "aws.compute.ElasticContainerServiceService"
                        },
                        {
                            "const": "aws.compute.ElasticContainerService"
                        },
                        {
                            "const": "aws.compute.ECS"
                        },
                        {
                            "const": "aws.compute.ElasticKubernetesService"
                        },
                        {
                            "const": "aws.compute.EKS"
                        },
                        {
                            "const": "aws.compute.Fargate"
                        },
                        {
                            "const": "aws.compute.LambdaFunction"
                        },
                        {
                            "const": "aws.compute.Lambda"
                        },
                        {
                            "const": "aws.compute.Lightsail"
                        },
                        {
                            "const": "aws.compute.LocalZones"
                        },
                        {
                            "const": "aws.compute.Outposts"
                        },
                        {
                            "const": "aws.compute.ServerlessApplicationRepository"
                        },
                        {
                            "const": "aws.compute.SAR"
                        },
                        {
                            "const": "aws.compute.ThinkboxDeadline"
                        },
                        {
                            "const": "aws.compute.ThinkboxDraft"
                        },
                        {
                            "const": "aws.compute.ThinkboxFrost"
                        },
                        {
                            "const": "aws.compute.ThinkboxKrakatoa"
                        },
                        {
                            "const": "aws.compute.ThinkboxSequoia"
                        },
                        {
                            "const": "aws.compute.ThinkboxStoke"
                        },
                        {
                            "const": "aws.compute.ThinkboxXmesh"
                        },
                        {
                            "const": "aws.compute.VmwareCloudOnAWS"
                        },
                        {
                            "const": "aws.compute.Wavelength"
                        },
                        {
                            "const": "aws.cost.Budgets"
                        },
                        {
                            "const": "aws.cost.CostAndUsageReport"
                        },
                        {
                            "const": "aws.cost.CostExplorer"
                        },
                        {
                            "const": "aws.cost.CostManagement"
                        },
                        {
                            "const": "aws.cost.ReservedInstanceReporting"
                        },
                        {
                            "const": "aws.cost.SavingsPlans"
                        },
                        {
                            "const": "aws.database.AuroraInstance"
                        },
                        {
                            "const": "aws.database.Aurora"
                        },
                        {
                            "const": "aws.database.DatabaseMigrationServiceDatabaseMigrationWorkflow"
                        },
                        {
                            "const": "aws.database.DatabaseMigrationService"
                        },
                        {
                            "const": "aws.database.DMS"
                        },
                        {
                            "const": "aws.database.Database"
                        },
                        {
                            "const": "aws.database.DB"
                        },
                        {
                            "const": "aws.database.DocumentdbMongodbCompatibility"
                        },
                        {
                            "const": "aws.database.DocumentDB"
                        },
                        {
                            "const": "aws.database.DynamodbAttribute"
                        },
                        {
                            "const": "aws.database.DynamodbAttributes"
                        },
                        {
                            "const": "aws.database.DynamodbDax"
                        },
                        {
                            "const": "aws.database.DAX"
                        },
                        {
                            "const": "aws.database.DynamodbGlobalSecondaryIndex"
                        },
                        {
                            "const": "aws.database.DynamodbGSI"
                        },
                        {
                            "const": "aws.database.DynamodbItem"
                        },
                        {
                            "const": "aws.database.DynamodbItems"
                        },
                        {
                            "const": "aws.database.DynamodbTable"
                        },
                        {
                            "const": "aws.database.Dynamodb"
                        },
                        {
                            "const": "aws.database.DDB"
                        },
                        {
                            "const": "aws.database.ElasticacheCacheNode"
                        },
                        {
                            "const": "aws.database.ElasticacheForMemcached"
                        },
                        {
                            "const": "aws.database.ElasticacheForRedis"
                        },
                        {
                            "const": "aws.database.Elasticache"
                        },
                        {
                            "const": "aws.database.ElastiCache"
                        },
                        {
                            "const": "aws.database.KeyspacesManagedApacheCassandraService"
                        },
                        {
                            "const": "aws.database.Neptune"
                        },
                        {
                            "const": "aws.database.QuantumLedgerDatabaseQldb"
                        },
                        {
                            "const": "aws.database.QLDB"
                        },
                        {
                            "const": "aws.database.RDSInstance"
                        },
                        {
                            "const": "aws.database.RDSMariadbInstance"
                        },
                        {
                            "const": "aws.database.RDSMysqlInstance"
                        },
                        {
                            "const": "aws.database.RDSOnVmware"
                        },
                        {
                            "const": "aws.database.RDSOracleInstance"
                        },
                        {
                            "const": "aws.database.RDSPostgresqlInstance"
                        },
                        {
                            "const": "aws.database.RDSSqlServerInstance"
                        },
                        {
                            "const": "aws.database.RDS"
                        },
                        {
                            "const": "aws.database.RedshiftDenseComputeNode"
                        },
                        {
                            "const": "aws.database.RedshiftDenseStorageNode"
                        },
                        {
                            "const": "aws.database.Redshift"
                        },
                        {
                            "const": "aws.database.Timestream"
                        },
                        {
                            "const": "aws.devtools.CloudDevelopmentKit"
                        },
                        {
                            "const": "aws.devtools.Cloud9Resource"
                        },
                        {
                            "const": "aws.devtools.Cloud9"
                        },
                        {
                            "const": "aws.devtools.Codebuild"
                        },
                        {
                            "const": "aws.devtools.Codecommit"
                        },
                        {
                            "const": "aws.devtools.Codedeploy"
                        },
                        {
                            "const": "aws.devtools.Codepipeline"
                        },
                        {
                            "const": "aws.devtools.Codestar"
                        },
                        {
                            "const": "aws.devtools.CommandLineInterface"
                        },
                        {
                            "const": "aws.devtools.CLI"
                        },
                        {
                            "const": "aws.devtools.DeveloperTools"
                        },
                        {
                            "const": "aws.devtools.DevTools"
                        },
                        {
                            "const": "aws.devtools.ToolsAndSdks"
                        },
                        {
                            "const": "aws.devtools.XRay"
                        },
                        {
                            "const": "aws.enablement.CustomerEnablement"
                        },
                        {
                            "const": "aws.enablement.Iq"
                        },
                        {
                            "const": "aws.enablement.ManagedServices"
                        },
                        {
                            "const": "aws.enablement.ProfessionalServices"
                        },
                        {
                            "const": "aws.enablement.Support"
                        },
                        {
                            "const": "aws.enduser.Appstream20"
                        },
                        {
                            "const": "aws.enduser.DesktopAndAppStreaming"
                        },
                        {
                            "const": "aws.enduser.Workdocs"
                        },
                        {
                            "const": "aws.enduser.Worklink"
                        },
                        {
                            "const": "aws.enduser.Workspaces"
                        },
                        {
                            "const": "aws.engagement.Connect"
                        },
                        {
                            "const": "aws.engagement.CustomerEngagement"
                        },
                        {
                            "const": "aws.engagement.Pinpoint"
                        },
                        {
                            "const": "aws.engagement.SimpleEmailServiceSesEmail"
                        },
                        {
                            "const": "aws.engagement.SimpleEmailServiceSes"
                        },
                        {
                            "const": "aws.engagement.SES"
                        },
                        {
                            "const": "aws.game.GameTech"
                        },
                        {
                            "const": "aws.game.Gamelift"
                        },
                        {
                            "const": "aws.general.Client"
                        },
                        {
                            "const": "aws.general.Disk"
                        },
                        {
                            "const": "aws.general.Forums"
                        },
                        {
                            "const": "aws.general.General"
                        },
                        {
                            "const": "aws.general.GenericDatabase"
                        },
                        {
                            "const": "aws.general.GenericFirewall"
                        },
                        {
                            "const": "aws.general.GenericOfficeBuilding"
                        },
                        {
                            "const": "aws.general.OfficeBuilding"
                        },
                        {
                            "const": "aws.general.GenericSamlToken"
                        },
                        {
                            "const": "aws.general.GenericSDK"
                        },
                        {
                            "const": "aws.general.InternetAlt1"
                        },
                        {
                            "const": "aws.general.InternetAlt2"
                        },
                        {
                            "const": "aws.general.InternetGateway"
                        },
                        {
                            "const": "aws.general.Marketplace"
                        },
                        {
                            "const": "aws.general.MobileClient"
                        },
                        {
                            "const": "aws.general.Multimedia"
                        },
                        {
                            "const": "aws.general.OfficeBuilding"
                        },
                        {
                            "const": "aws.general.SamlToken"
                        },
                        {
                            "const": "aws.general.SDK"
                        },
                        {
                            "const": "aws.general.SslPadlock"
                        },
                        {
                            "const": "aws.general.TapeStorage"
                        },
                        {
                            "const": "aws.general.Toolkit"
                        },
                        {
                            "const": "aws.general.TraditionalServer"
                        },
                        {
                            "const": "aws.general.User"
                        },
                        {
                            "const": "aws.general.Users"
                        },
                        {
                            "const": "aws.integration.ApplicationIntegration"
                        },
                        {
                            "const": "aws.integration.Appsync"
                        },
                        {
                            "const": "aws.integration.ConsoleMobileApplication"
                        },
                        {
                            "const": "aws.integration.EventResource"
                        },
                        {
                            "const": "aws.integration.EventbridgeCustomEventBusResource"
                        },
                        {
                            "const": "aws.integration.EventbridgeDefaultEventBusResource"
                        },
                        {
                            "const": "aws.integration.EventbridgeSaasPartnerEventBusResource"
                        },
                        {
                            "const": "aws.integration.Eventbridge"
                        },
                        {
                            "const": "aws.integration.ExpressWorkflows"
                        },
                        {
                            "const": "aws.integration.MQ"
                        },
                        {
                            "const": "aws.integration.SimpleNotificationServiceSnsEmailNotification"
                        },
                        {
                            "const": "aws.integration.SimpleNotificationServiceSnsHttpNotification"
                        },
                        {
                            "const": "aws.integration.SimpleNotificationServiceSnsTopic"
                        },
                        {
                            "const": "aws.integration.SimpleNotificationServiceSns"
                        },
                        {
                            "const": "aws.integration.SNS"
                        },
                        {
                            "const": "aws.integration.SimpleQueueServiceSqsMessage"
                        },
                        {
                            "const": "aws.integration.SimpleQueueServiceSqsQueue"
                        },
                        {
                            "const": "aws.integration.SimpleQueueServiceSqs"
                        },
                        {
                            "const": "aws.integration.SQS"
                        },
                        {
                            "const": "aws.integration.StepFunctions"
                        },
                        {
                            "const": "aws.integration.SF"
                        },
                        {
                            "const": "aws.iot.Freertos"
                        },
                        {
                            "const": "aws.iot.FreeRTOS"
                        },
                        {
                            "const": "aws.iot.InternetOfThings"
                        },
                        {
                            "const": "aws.iot.Iot1Click"
                        },
                        {
                            "const": "aws.iot.IotAction"
                        },
                        {
                            "const": "aws.iot.IotActuator"
                        },
                        {
                            "const": "aws.iot.IotAlexaEcho"
                        },
                        {
                            "const": "aws.iot.IotAlexaEnabledDevice"
                        },
                        {
                            "const": "aws.iot.IotAlexaSkill"
                        },
                        {
                            "const": "aws.iot.IotAlexaVoiceService"
                        },
                        {
                            "const": "aws.iot.IotAnalyticsChannel"
                        },
                        {
                            "const": "aws.iot.IotAnalyticsDataSet"
                        },
                        {
                            "const": "aws.iot.IotAnalyticsDataStore"
                        },
                        {
                            "const": "aws.iot.IotAnalyticsNotebook"
                        },
                        {
                            "const": "aws.iot.IotAnalyticsPipeline"
                        },
                        {
                            "const": "aws.iot.IotAnalytics"
                        },
                        {
                            "const": "aws.iot.IotBank"
                        },
                        {
                            "const": "aws.iot.IotBicycle"
                        },
                        {
                            "const": "aws.iot.IotButton"
                        },
                        {
                            "const": "aws.iot.IotCamera"
                        },
                        {
                            "const": "aws.iot.IotCar"
                        },
                        {
                            "const": "aws.iot.IotCart"
                        },
                        {
                            "const": "aws.iot.IotCertificate"
                        },
                        {
                            "const": "aws.iot.IotCoffeePot"
                        },
                        {
                            "const": "aws.iot.IotCore"
                        },
                        {
                            "const": "aws.iot.IotDesiredState"
                        },
                        {
                            "const": "aws.iot.IotDeviceDefender"
                        },
                        {
                            "const": "aws.iot.IotDeviceGateway"
                        },
                        {
                            "const": "aws.iot.IotDeviceManagement"
                        },
                        {
                            "const": "aws.iot.IotDoorLock"
                        },
                        {
                            "const": "aws.iot.IotEvents"
                        },
                        {
                            "const": "aws.iot.IotFactory"
                        },
                        {
                            "const": "aws.iot.IotFireTvStick"
                        },
                        {
                            "const": "aws.iot.IotFireTv"
                        },
                        {
                            "const": "aws.iot.IotGeneric"
                        },
                        {
                            "const": "aws.iot.IotGreengrassConnector"
                        },
                        {
                            "const": "aws.iot.IotGreengrass"
                        },
                        {
                            "const": "aws.iot.IotHardwareBoard"
                        },
                        {
                            "const": "aws.iot.IotBoard"
                        },
                        {
                            "const": "aws.iot.IotHouse"
                        },
                        {
                            "const": "aws.iot.IotHttp"
                        },
                        {
                            "const": "aws.iot.IotHttp2"
                        },
                        {
                            "const": "aws.iot.IotJobs"
                        },
                        {
                            "const": "aws.iot.IotLambda"
                        },
                        {
                            "const": "aws.iot.IotLightbulb"
                        },
                        {
                            "const": "aws.iot.IotMedicalEmergency"
                        },
                        {
                            "const": "aws.iot.IotMqtt"
                        },
                        {
                            "const": "aws.iot.IotOverTheAirUpdate"
                        },
                        {
                            "const": "aws.iot.IotPolicyEmergency"
                        },
                        {
                            "const": "aws.iot.IotPolicy"
                        },
                        {
                            "const": "aws.iot.IotReportedState"
                        },
                        {
                            "const": "aws.iot.IotRule"
                        },
                        {
                            "const": "aws.iot.IotSensor"
                        },
                        {
                            "const": "aws.iot.IotServo"
                        },
                        {
                            "const": "aws.iot.IotShadow"
                        },
                        {
                            "const": "aws.iot.IotSimulator"
                        },
                        {
                            "const": "aws.iot.IotSitewise"
                        },
                        {
                            "const": "aws.iot.IotThermostat"
                        },
                        {
                            "const": "aws.iot.IotThingsGraph"
                        },
                        {
                            "const": "aws.iot.IotTopic"
                        },
                        {
                            "const": "aws.iot.IotTravel"
                        },
                        {
                            "const": "aws.iot.IotUtility"
                        },
                        {
                            "const": "aws.iot.IotWindfarm"
                        },
                        {
                            "const": "aws.management.AutoScaling"
                        },
                        {
                            "const": "aws.management.Chatbot"
                        },
                        {
                            "const": "aws.management.CloudformationChangeSet"
                        },
                        {
                            "const": "aws.management.CloudformationStack"
                        },
                        {
                            "const": "aws.management.CloudformationTemplate"
                        },
                        {
                            "const": "aws.management.Cloudformation"
                        },
                        {
                            "const": "aws.management.Cloudtrail"
                        },
                        {
                            "const": "aws.management.CloudwatchAlarm"
                        },
                        {
                            "const": "aws.management.CloudwatchEventEventBased"
                        },
                        {
                            "const": "aws.management.CloudwatchEventTimeBased"
                        },
                        {
                            "const": "aws.management.CloudwatchRule"
                        },
                        {
                            "const": "aws.management.Cloudwatch"
                        },
                        {
                            "const": "aws.management.Codeguru"
                        },
                        {
                            "const": "aws.management.CommandLineInterface"
                        },
                        {
                            "const": "aws.management.Config"
                        },
                        {
                            "const": "aws.management.ControlTower"
                        },
                        {
                            "const": "aws.management.LicenseManager"
                        },
                        {
                            "const": "aws.management.ManagedServices"
                        },
                        {
                            "const": "aws.management.ManagementAndGovernance"
                        },
                        {
                            "const": "aws.management.ManagementConsole"
                        },
                        {
                            "const": "aws.management.OpsworksApps"
                        },
                        {
                            "const": "aws.management.OpsworksDeployments"
                        },
                        {
                            "const": "aws.management.OpsworksInstances"
                        },
                        {
                            "const": "aws.management.OpsworksLayers"
                        },
                        {
                            "const": "aws.management.OpsworksMonitoring"
                        },
                        {
                            "const": "aws.management.OpsworksPermissions"
                        },
                        {
                            "const": "aws.management.OpsworksResources"
                        },
                        {
                            "const": "aws.management.OpsworksStack"
                        },
                        {
                            "const": "aws.management.Opsworks"
                        },
                        {
                            "const": "aws.management.OrganizationsAccount"
                        },
                        {
                            "const": "aws.management.OrganizationsOrganizationalUnit"
                        },
                        {
                            "const": "aws.management.Organizations"
                        },
                        {
                            "const": "aws.management.PersonalHealthDashboard"
                        },
                        {
                            "const": "aws.management.ServiceCatalog"
                        },
                        {
                            "const": "aws.management.SystemsManagerAutomation"
                        },
                        {
                            "const": "aws.management.SystemsManagerDocuments"
                        },
                        {
                            "const": "aws.management.SystemsManagerInventory"
                        },
                        {
                            "const": "aws.management.SystemsManagerMaintenanceWindows"
                        },
                        {
                            "const": "aws.management.SystemsManagerOpscenter"
                        },
                        {
                            "const": "aws.management.SystemsManagerParameterStore"
                        },
                        {
                            "const": "aws.management.ParameterStore"
                        },
                        {
                            "const": "aws.management.SystemsManagerPatchManager"
                        },
                        {
                            "const": "aws.management.SystemsManagerRunCommand"
                        },
                        {
                            "const": "aws.management.SystemsManagerStateManager"
                        },
                        {
                            "const": "aws.management.SystemsManager"
                        },
                        {
                            "const": "aws.management.SSM"
                        },
                        {
                            "const": "aws.management.TrustedAdvisorChecklistCost"
                        },
                        {
                            "const": "aws.management.TrustedAdvisorChecklistFaultTolerant"
                        },
                        {
                            "const": "aws.management.TrustedAdvisorChecklistPerformance"
                        },
                        {
                            "const": "aws.management.TrustedAdvisorChecklistSecurity"
                        },
                        {
                            "const": "aws.management.TrustedAdvisorChecklist"
                        },
                        {
                            "const": "aws.management.TrustedAdvisor"
                        },
                        {
                            "const": "aws.management.WellArchitectedTool"
                        },
                        {
                            "const": "aws.media.ElasticTranscoder"
                        },
                        {
                            "const": "aws.media.ElementalConductor"
                        },
                        {
                            "const": "aws.media.ElementalDelta"
                        },
                        {
                            "const": "aws.media.ElementalLive"
                        },
                        {
                            "const": "aws.media.ElementalMediaconnect"
                        },
                        {
                            "const": "aws.media.ElementalMediaconvert"
                        },
                        {
                            "const": "aws.media.ElementalMedialive"
                        },
                        {
                            "const": "aws.media.ElementalMediapackage"
                        },
                        {
                            "const": "aws.media.ElementalMediastore"
                        },
                        {
                            "const": "aws.media.ElementalMediatailor"
                        },
                        {
                            "const": "aws.media.ElementalServer"
                        },
                        {
                            "const": "aws.media.KinesisVideoStreams"
                        },
                        {
                            "const": "aws.media.MediaServices"
                        },
                        {
                            "const": "aws.migration.ApplicationDiscoveryService"
                        },
                        {
                            "const": "aws.migration.ADS"
                        },
                        {
                            "const": "aws.migration.CloudendureMigration"
                        },
                        {
                            "const": "aws.migration.CEM"
                        },
                        {
                            "const": "aws.migration.DatabaseMigrationService"
                        },
                        {
                            "const": "aws.migration.DMS"
                        },
                        {
                            "const": "aws.migration.DatasyncAgent"
                        },
                        {
                            "const": "aws.migration.Datasync"
                        },
                        {
                            "const": "aws.migration.MigrationAndTransfer"
                        },
                        {
                            "const": "aws.migration.MAT"
                        },
                        {
                            "const": "aws.migration.MigrationHub"
                        },
                        {
                            "const": "aws.migration.ServerMigrationService"
                        },
                        {
                            "const": "aws.migration.SMS"
                        },
                        {
                            "const": "aws.migration.SnowballEdge"
                        },
                        {
                            "const": "aws.migration.Snowball"
                        },
                        {
                            "const": "aws.migration.Snowmobile"
                        },
                        {
                            "const": "aws.migration.TransferForSftp"
                        },
                        {
                            "const": "aws.ml.ApacheMxnetOnAWS"
                        },
                        {
                            "const": "aws.ml.AugmentedAi"
                        },
                        {
                            "const": "aws.ml.Comprehend"
                        },
                        {
                            "const": "aws.ml.DeepLearningAmis"
                        },
                        {
                            "const": "aws.ml.DeepLearningContainers"
                        },
                        {
                            "const": "aws.ml.DLC"
                        },
                        {
                            "const": "aws.ml.Deepcomposer"
                        },
                        {
                            "const": "aws.ml.Deeplens"
                        },
                        {
                            "const": "aws.ml.Deepracer"
                        },
                        {
                            "const": "aws.ml.ElasticInference"
                        },
                        {
                            "const": "aws.ml.Forecast"
                        },
                        {
                            "const": "aws.ml.FraudDetector"
                        },
                        {
                            "const": "aws.ml.Kendra"
                        },
                        {
                            "const": "aws.ml.Lex"
                        },
                        {
                            "const": "aws.ml.MachineLearning"
                        },
                        {
                            "const": "aws.ml.Personalize"
                        },
                        {
                            "const": "aws.ml.Polly"
                        },
                        {
                            "const": "aws.ml.RekognitionImage"
                        },
                        {
                            "const": "aws.ml.RekognitionVideo"
                        },
                        {
                            "const": "aws.ml.Rekognition"
                        },
                        {
                            "const": "aws.ml.SagemakerGroundTruth"
                        },
                        {
                            "const": "aws.ml.SagemakerModel"
                        },
                        {
                            "const": "aws.ml.SagemakerNotebook"
                        },
                        {
                            "const": "aws.ml.SagemakerTrainingJob"
                        },
                        {
                            "const": "aws.ml.Sagemaker"
                        },
                        {
                            "const": "aws.ml.TensorflowOnAWS"
                        },
                        {
                            "const": "aws.ml.Textract"
                        },
                        {
                            "const": "aws.ml.Transcribe"
                        },
                        {
                            "const": "aws.ml.Translate"
                        },
                        {
                            "const": "aws.mobile.Amplify"
                        },
                        {
                            "const": "aws.mobile.APIGatewayEndpoint"
                        },
                        {
                            "const": "aws.mobile.APIGateway"
                        },
                        {
                            "const": "aws.mobile.Appsync"
                        },
                        {
                            "const": "aws.mobile.DeviceFarm"
                        },
                        {
                            "const": "aws.mobile.Mobile"
                        },
                        {
                            "const": "aws.mobile.Pinpoint"
                        },
                        {
                            "const": "aws.network.APIGatewayEndpoint"
                        },
                        {
                            "const": "aws.network.APIGateway"
                        },
                        {
                            "const": "aws.network.AppMesh"
                        },
                        {
                            "const": "aws.network.ClientVpn"
                        },
                        {
                            "const": "aws.network.CloudMap"
                        },
                        {
                            "const": "aws.network.CloudFrontDownloadDistribution"
                        },
                        {
                            "const": "aws.network.CloudFrontEdgeLocation"
                        },
                        {
                            "const": "aws.network.CloudFrontStreamingDistribution"
                        },
                        {
                            "const": "aws.network.CloudFront"
                        },
                        {
                            "const": "aws.network.CF"
                        },
                        {
                            "const": "aws.network.DirectConnect"
                        },
                        {
                            "const": "aws.network.ElasticLoadBalancing"
                        },
                        {
                            "const": "aws.network.ELB"
                        },
                        {
                            "const": "aws.network.ElbApplicationLoadBalancer"
                        },
                        {
                            "const": "aws.network.ALB"
                        },
                        {
                            "const": "aws.network.ElbClassicLoadBalancer"
                        },
                        {
                            "const": "aws.network.CLB"
                        },
                        {
                            "const": "aws.network.ElbNetworkLoadBalancer"
                        },
                        {
                            "const": "aws.network.NLB"
                        },
                        {
                            "const": "aws.network.Endpoint"
                        },
                        {
                            "const": "aws.network.GlobalAccelerator"
                        },
                        {
                            "const": "aws.network.GAX"
                        },
                        {
                            "const": "aws.network.InternetGateway"
                        },
                        {
                            "const": "aws.network.Nacl"
                        },
                        {
                            "const": "aws.network.NATGateway"
                        },
                        {
                            "const": "aws.network.NetworkingAndContentDelivery"
                        },
                        {
                            "const": "aws.network.PrivateSubnet"
                        },
                        {
                            "const": "aws.network.Privatelink"
                        },
                        {
                            "const": "aws.network.PublicSubnet"
                        },
                        {
                            "const": "aws.network.Route53HostedZone"
                        },
                        {
                            "const": "aws.network.Route53"
                        },
                        {
                            "const": "aws.network.RouteTable"
                        },
                        {
                            "const": "aws.network.SiteToSiteVpn"
                        },
                        {
                            "const": "aws.network.TransitGateway"
                        },
                        {
                            "const": "aws.network.VPCCustomerGateway"
                        },
                        {
                            "const": "aws.network.VPCElasticNetworkAdapter"
                        },
                        {
                            "const": "aws.network.VPCElasticNetworkInterface"
                        },
                        {
                            "const": "aws.network.VPCFlowLogs"
                        },
                        {
                            "const": "aws.network.VPCPeering"
                        },
                        {
                            "const": "aws.network.VPCRouter"
                        },
                        {
                            "const": "aws.network.VPCTrafficMirroring"
                        },
                        {
                            "const": "aws.network.VPC"
                        },
                        {
                            "const": "aws.network.VpnConnection"
                        },
                        {
                            "const": "aws.network.VpnGateway"
                        },
                        {
                            "const": "aws.quantum.Braket"
                        },
                        {
                            "const": "aws.quantum.QuantumTechnologies"
                        },
                        {
                            "const": "aws.robotics.RobomakerCloudExtensionRos"
                        },
                        {
                            "const": "aws.robotics.RobomakerDevelopmentEnvironment"
                        },
                        {
                            "const": "aws.robotics.RobomakerFleetManagement"
                        },
                        {
                            "const": "aws.robotics.RobomakerSimulator"
                        },
                        {
                            "const": "aws.robotics.Robomaker"
                        },
                        {
                            "const": "aws.robotics.Robotics"
                        },
                        {
                            "const": "aws.satellite.GroundStation"
                        },
                        {
                            "const": "aws.satellite.Satellite"
                        },
                        {
                            "const": "aws.security.AdConnector"
                        },
                        {
                            "const": "aws.security.Artifact"
                        },
                        {
                            "const": "aws.security.CertificateAuthority"
                        },
                        {
                            "const": "aws.security.CertificateManager"
                        },
                        {
                            "const": "aws.security.ACM"
                        },
                        {
                            "const": "aws.security.CloudDirectory"
                        },
                        {
                            "const": "aws.security.Cloudhsm"
                        },
                        {
                            "const": "aws.security.CloudHSM"
                        },
                        {
                            "const": "aws.security.Cognito"
                        },
                        {
                            "const": "aws.security.Detective"
                        },
                        {
                            "const": "aws.security.DirectoryService"
                        },
                        {
                            "const": "aws.security.DS"
                        },
                        {
                            "const": "aws.security.FirewallManager"
                        },
                        {
                            "const": "aws.security.FMS"
                        },
                        {
                            "const": "aws.security.Guardduty"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamAccessAnalyzer"
                        },
                        {
                            "const": "aws.security.IAMAccessAnalyzer"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamAddOn"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamAWSStsAlternate"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamAWSSts"
                        },
                        {
                            "const": "aws.security.IAMAWSSts"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamDataEncryptionKey"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamEncryptedData"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamLongTermSecurityCredential"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamMfaToken"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamPermissions"
                        },
                        {
                            "const": "aws.security.IAMPermissions"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamRole"
                        },
                        {
                            "const": "aws.security.IAMRole"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIamTemporarySecurityCredential"
                        },
                        {
                            "const": "aws.security.IdentityAndAccessManagementIam"
                        },
                        {
                            "const": "aws.security.IAM"
                        },
                        {
                            "const": "aws.security.InspectorAgent"
                        },
                        {
                            "const": "aws.security.Inspector"
                        },
                        {
                            "const": "aws.security.KeyManagementService"
                        },
                        {
                            "const": "aws.security.KMS"
                        },
                        {
                            "const": "aws.security.Macie"
                        },
                        {
                            "const": "aws.security.ManagedMicrosoftAd"
                        },
                        {
                            "const": "aws.security.ResourceAccessManager"
                        },
                        {
                            "const": "aws.security.RAM"
                        },
                        {
                            "const": "aws.security.SecretsManager"
                        },
                        {
                            "const": "aws.security.SecurityHubFinding"
                        },
                        {
                            "const": "aws.security.SecurityHub"
                        },
                        {
                            "const": "aws.security.SecurityIdentityAndCompliance"
                        },
                        {
                            "const": "aws.security.ShieldAdvanced"
                        },
                        {
                            "const": "aws.security.Shield"
                        },
                        {
                            "const": "aws.security.SimpleAd"
                        },
                        {
                            "const": "aws.security.SingleSignOn"
                        },
                        {
                            "const": "aws.security.WAFFilteringRule"
                        },
                        {
                            "const": "aws.security.WAF"
                        },
                        {
                            "const": "aws.storage.Backup"
                        },
                        {
                            "const": "aws.storage.CloudendureDisasterRecovery"
                        },
                        {
                            "const": "aws.storage.CDR"
                        },
                        {
                            "const": "aws.storage.EFSInfrequentaccessPrimaryBg"
                        },
                        {
                            "const": "aws.storage.EFSStandardPrimaryBg"
                        },
                        {
                            "const": "aws.storage.ElasticBlockStoreEBSSnapshot"
                        },
                        {
                            "const": "aws.storage.ElasticBlockStoreEBSVolume"
                        },
                        {
                            "const": "aws.storage.ElasticBlockStoreEBS"
                        },
                        {
                            "const": "aws.storage.EBS"
                        },
                        {
                            "const": "aws.storage.ElasticFileSystemEFSFileSystem"
                        },
                        {
                            "const": "aws.storage.ElasticFileSystemEFS"
                        },
                        {
                            "const": "aws.storage.EFS"
                        },
                        {
                            "const": "aws.storage.FsxForLustre"
                        },
                        {
                            "const": "aws.storage.FsxForWindowsFileServer"
                        },
                        {
                            "const": "aws.storage.Fsx"
                        },
                        {
                            "const": "aws.storage.FSx"
                        },
                        {
                            "const": "aws.storage.MultipleVolumesResource"
                        },
                        {
                            "const": "aws.storage.S3GlacierArchive"
                        },
                        {
                            "const": "aws.storage.S3GlacierVault"
                        },
                        {
                            "const": "aws.storage.S3Glacier"
                        },
                        {
                            "const": "aws.storage.SimpleStorageServiceS3BucketWithObjects"
                        },
                        {
                            "const": "aws.storage.SimpleStorageServiceS3Bucket"
                        },
                        {
                            "const": "aws.storage.SimpleStorageServiceS3Object"
                        },
                        {
                            "const": "aws.storage.SimpleStorageServiceS3"
                        },
                        {
                            "const": "aws.storage.S3"
                        },
                        {
                            "const": "aws.storage.SnowFamilySnowballImportExport"
                        },
                        {
                            "const": "aws.storage.SnowballEdge"
                        },
                        {
                            "const": "aws.storage.Snowball"
                        },
                        {
                            "const": "aws.storage.Snowmobile"
                        },
                        {
                            "const": "aws.storage.StorageGatewayCachedVolume"
                        },
                        {
                            "const": "aws.storage.StorageGatewayNonCachedVolume"
                        },
                        {
                            "const": "aws.storage.StorageGatewayVirtualTapeLibrary"
                        },
                        {
                            "const": "aws.storage.StorageGateway"
                        },
                        {
                            "const": "aws.storage.Storage"
                        },
                        {
                            "const": "azure.analytics.AnalysisServices"
                        },
                        {
                            "const": "azure.analytics.DataExplorerClusters"
                        },
                        {
                            "const": "azure.analytics.DataFactories"
                        },
                        {
                            "const": "azure.analytics.DataLakeAnalytics"
                        },
                        {
                            "const": "azure.analytics.DataLakeStoreGen1"
                        },
                        {
                            "const": "azure.analytics.Databricks"
                        },
                        {
                            "const": "azure.analytics.EventHubClusters"
                        },
                        {
                            "const": "azure.analytics.EventHubs"
                        },
                        {
                            "const": "azure.analytics.Hdinsightclusters"
                        },
                        {
                            "const": "azure.analytics.LogAnalyticsWorkspaces"
                        },
                        {
                            "const": "azure.analytics.StreamAnalyticsJobs"
                        },
                        {
                            "const": "azure.analytics.SynapseAnalytics"
                        },
                        {
                            "const": "azure.compute.AppServices"
                        },
                        {
                            "const": "azure.compute.AutomanagedVM"
                        },
                        {
                            "const": "azure.compute.AvailabilitySets"
                        },
                        {
                            "const": "azure.compute.BatchAccounts"
                        },
                        {
                            "const": "azure.compute.CitrixVirtualDesktopsEssentials"
                        },
                        {
                            "const": "azure.compute.CloudServicesClassic"
                        },
                        {
                            "const": "azure.compute.CloudServices"
                        },
                        {
                            "const": "azure.compute.CloudsimpleVirtualMachines"
                        },
                        {
                            "const": "azure.compute.ContainerInstances"
                        },
                        {
                            "const": "azure.compute.ContainerRegistries**, **ACR"
                        },
                        {
                            "const": "azure.compute.ACR"
                        },
                        {
                            "const": "azure.compute.DiskEncryptionSets"
                        },
                        {
                            "const": "azure.compute.DiskSnapshots"
                        },
                        {
                            "const": "azure.compute.Disks"
                        },
                        {
                            "const": "azure.compute.FunctionApps"
                        },
                        {
                            "const": "azure.compute.ImageDefinitions"
                        },
                        {
                            "const": "azure.compute.ImageVersions"
                        },
                        {
                            "const": "azure.compute.KubernetesServices"
                        },
                        {
                            "const": "azure.compute.AKS"
                        },
                        {
                            "const": "azure.compute.MeshApplications"
                        },
                        {
                            "const": "azure.compute.OsImages"
                        },
                        {
                            "const": "azure.compute.SAPHANAOnAzure"
                        },
                        {
                            "const": "azure.compute.ServiceFabricClusters"
                        },
                        {
                            "const": "azure.compute.SharedImageGalleries"
                        },
                        {
                            "const": "azure.compute.SpringCloud"
                        },
                        {
                            "const": "azure.compute.VMClassic"
                        },
                        {
                            "const": "azure.compute.VMImages"
                        },
                        {
                            "const": "azure.compute.VMLinux"
                        },
                        {
                            "const": "azure.compute.VMScaleSet"
                        },
                        {
                            "const": "azure.compute.VMSS"
                        },
                        {
                            "const": "azure.compute.VMWindows"
                        },
                        {
                            "const": "azure.compute.VM"
                        },
                        {
                            "const": "azure.compute.Workspaces"
                        },
                        {
                            "const": "azure.database.BlobStorage"
                        },
                        {
                            "const": "azure.database.CacheForRedis"
                        },
                        {
                            "const": "azure.database.CosmosDb"
                        },
                        {
                            "const": "azure.database.DataExplorerClusters"
                        },
                        {
                            "const": "azure.database.DataFactory"
                        },
                        {
                            "const": "azure.database.DataLake"
                        },
                        {
                            "const": "azure.database.DatabaseForMariadbServers"
                        },
                        {
                            "const": "azure.database.DatabaseForMysqlServers"
                        },
                        {
                            "const": "azure.database.DatabaseForPostgresqlServers"
                        },
                        {
                            "const": "azure.database.ElasticDatabasePools"
                        },
                        {
                            "const": "azure.database.ElasticJobAgents"
                        },
                        {
                            "const": "azure.database.InstancePools"
                        },
                        {
                            "const": "azure.database.ManagedDatabases"
                        },
                        {
                            "const": "azure.database.SQLDatabases"
                        },
                        {
                            "const": "azure.database.SQLDatawarehouse"
                        },
                        {
                            "const": "azure.database.SQLManagedInstances"
                        },
                        {
                            "const": "azure.database.SQLServerStretchDatabases"
                        },
                        {
                            "const": "azure.database.SQLServers"
                        },
                        {
                            "const": "azure.database.SQLVM"
                        },
                        {
                            "const": "azure.database.SQL"
                        },
                        {
                            "const": "azure.database.SsisLiftAndShiftIr"
                        },
                        {
                            "const": "azure.database.SynapseAnalytics"
                        },
                        {
                            "const": "azure.database.VirtualClusters"
                        },
                        {
                            "const": "azure.database.VirtualDatacenter"
                        },
                        {
                            "const": "azure.devops.ApplicationInsights"
                        },
                        {
                            "const": "azure.devops.Artifacts"
                        },
                        {
                            "const": "azure.devops.Boards"
                        },
                        {
                            "const": "azure.devops.Devops"
                        },
                        {
                            "const": "azure.devops.DevtestLabs"
                        },
                        {
                            "const": "azure.devops.LabServices"
                        },
                        {
                            "const": "azure.devops.Pipelines"
                        },
                        {
                            "const": "azure.devops.Repos"
                        },
                        {
                            "const": "azure.devops.TestPlans"
                        },
                        {
                            "const": "azure.general.Allresources"
                        },
                        {
                            "const": "azure.general.Azurehome"
                        },
                        {
                            "const": "azure.general.Developertools"
                        },
                        {
                            "const": "azure.general.Helpsupport"
                        },
                        {
                            "const": "azure.general.Information"
                        },
                        {
                            "const": "azure.general.Managementgroups"
                        },
                        {
                            "const": "azure.general.Marketplace"
                        },
                        {
                            "const": "azure.general.Quickstartcenter"
                        },
                        {
                            "const": "azure.general.Recent"
                        },
                        {
                            "const": "azure.general.Reservations"
                        },
                        {
                            "const": "azure.general.Resource"
                        },
                        {
                            "const": "azure.general.Resourcegroups"
                        },
                        {
                            "const": "azure.general.Servicehealth"
                        },
                        {
                            "const": "azure.general.Shareddashboard"
                        },
                        {
                            "const": "azure.general.Subscriptions"
                        },
                        {
                            "const": "azure.general.Support"
                        },
                        {
                            "const": "azure.general.Supportrequests"
                        },
                        {
                            "const": "azure.general.Tag"
                        },
                        {
                            "const": "azure.general.Tags"
                        },
                        {
                            "const": "azure.general.Templates"
                        },
                        {
                            "const": "azure.general.Twousericon"
                        },
                        {
                            "const": "azure.general.Userhealthicon"
                        },
                        {
                            "const": "azure.general.Usericon"
                        },
                        {
                            "const": "azure.general.Userprivacy"
                        },
                        {
                            "const": "azure.general.Userresource"
                        },
                        {
                            "const": "azure.general.Whatsnew"
                        },
                        {
                            "const": "azure.identity.AccessReview"
                        },
                        {
                            "const": "azure.identity.ActiveDirectoryConnectHealth"
                        },
                        {
                            "const": "azure.identity.ActiveDirectory"
                        },
                        {
                            "const": "azure.identity.ADB2C"
                        },
                        {
                            "const": "azure.identity.ADDomainServices"
                        },
                        {
                            "const": "azure.identity.ADIdentityProtection"
                        },
                        {
                            "const": "azure.identity.ADPrivilegedIdentityManagement"
                        },
                        {
                            "const": "azure.identity.AppRegistrations"
                        },
                        {
                            "const": "azure.identity.ConditionalAccess"
                        },
                        {
                            "const": "azure.identity.EnterpriseApplications"
                        },
                        {
                            "const": "azure.identity.Groups"
                        },
                        {
                            "const": "azure.identity.IdentityGovernance"
                        },
                        {
                            "const": "azure.identity.InformationProtection"
                        },
                        {
                            "const": "azure.identity.ManagedIdentities"
                        },
                        {
                            "const": "azure.identity.Users"
                        },
                        {
                            "const": "azure.integration.APIForFhir"
                        },
                        {
                            "const": "azure.integration.APIManagement"
                        },
                        {
                            "const": "azure.integration.AppConfiguration"
                        },
                        {
                            "const": "azure.integration.DataCatalog"
                        },
                        {
                            "const": "azure.integration.EventGridDomains"
                        },
                        {
                            "const": "azure.integration.EventGridSubscriptions"
                        },
                        {
                            "const": "azure.integration.EventGridTopics"
                        },
                        {
                            "const": "azure.integration.IntegrationAccounts"
                        },
                        {
                            "const": "azure.integration.IntegrationServiceEnvironments"
                        },
                        {
                            "const": "azure.integration.LogicAppsCustomConnector"
                        },
                        {
                            "const": "azure.integration.LogicApps"
                        },
                        {
                            "const": "azure.integration.PartnerTopic"
                        },
                        {
                            "const": "azure.integration.SendgridAccounts"
                        },
                        {
                            "const": "azure.integration.ServiceBusRelays"
                        },
                        {
                            "const": "azure.integration.ServiceBus"
                        },
                        {
                            "const": "azure.integration.ServiceCatalogManagedApplicationDefinitions"
                        },
                        {
                            "const": "azure.integration.SoftwareAsAService"
                        },
                        {
                            "const": "azure.integration.StorsimpleDeviceManagers"
                        },
                        {
                            "const": "azure.integration.SystemTopic"
                        },
                        {
                            "const": "azure.iot.DeviceProvisioningServices"
                        },
                        {
                            "const": "azure.iot.DigitalTwins"
                        },
                        {
                            "const": "azure.iot.IotCentralApplications"
                        },
                        {
                            "const": "azure.iot.IotHubSecurity"
                        },
                        {
                            "const": "azure.iot.IotHub"
                        },
                        {
                            "const": "azure.iot.Maps"
                        },
                        {
                            "const": "azure.iot.Sphere"
                        },
                        {
                            "const": "azure.iot.TimeSeriesInsightsEnvironments"
                        },
                        {
                            "const": "azure.iot.TimeSeriesInsightsEventsSources"
                        },
                        {
                            "const": "azure.iot.Windows10IotCoreServices"
                        },
                        {
                            "const": "azure.migration.DataBoxEdge"
                        },
                        {
                            "const": "azure.migration.DataBox"
                        },
                        {
                            "const": "azure.migration.DatabaseMigrationServices"
                        },
                        {
                            "const": "azure.migration.MigrationProjects"
                        },
                        {
                            "const": "azure.migration.RecoveryServicesVaults"
                        },
                        {
                            "const": "azure.ml.BatchAI"
                        },
                        {
                            "const": "azure.ml.BotServices"
                        },
                        {
                            "const": "azure.ml.CognitiveServices"
                        },
                        {
                            "const": "azure.ml.GenomicsAccounts"
                        },
                        {
                            "const": "azure.ml.MachineLearningServiceWorkspaces"
                        },
                        {
                            "const": "azure.ml.MachineLearningStudioWebServicePlans"
                        },
                        {
                            "const": "azure.ml.MachineLearningStudioWebServices"
                        },
                        {
                            "const": "azure.ml.MachineLearningStudioWorkspaces"
                        },
                        {
                            "const": "azure.mobile.AppServiceMobile"
                        },
                        {
                            "const": "azure.mobile.MobileEngagement"
                        },
                        {
                            "const": "azure.mobile.NotificationHubs"
                        },
                        {
                            "const": "azure.network.ApplicationGateway"
                        },
                        {
                            "const": "azure.network.ApplicationSecurityGroups"
                        },
                        {
                            "const": "azure.network.CDNProfiles"
                        },
                        {
                            "const": "azure.network.Connections"
                        },
                        {
                            "const": "azure.network.DDOSProtectionPlans"
                        },
                        {
                            "const": "azure.network.DNSPrivateZones"
                        },
                        {
                            "const": "azure.network.DNSZones"
                        },
                        {
                            "const": "azure.network.ExpressrouteCircuits"
                        },
                        {
                            "const": "azure.network.Firewall"
                        },
                        {
                            "const": "azure.network.FrontDoors"
                        },
                        {
                            "const": "azure.network.LoadBalancers"
                        },
                        {
                            "const": "azure.network.LocalNetworkGateways"
                        },
                        {
                            "const": "azure.network.NetworkInterfaces"
                        },
                        {
                            "const": "azure.network.NetworkSecurityGroupsClassic"
                        },
                        {
                            "const": "azure.network.NetworkWatcher"
                        },
                        {
                            "const": "azure.network.OnPremisesDataGateways"
                        },
                        {
                            "const": "azure.network.PublicIpAddresses"
                        },
                        {
                            "const": "azure.network.ReservedIpAddressesClassic"
                        },
                        {
                            "const": "azure.network.RouteFilters"
                        },
                        {
                            "const": "azure.network.RouteTables"
                        },
                        {
                            "const": "azure.network.ServiceEndpointPolicies"
                        },
                        {
                            "const": "azure.network.Subnets"
                        },
                        {
                            "const": "azure.network.TrafficManagerProfiles"
                        },
                        {
                            "const": "azure.network.VirtualNetworkClassic"
                        },
                        {
                            "const": "azure.network.VirtualNetworkGateways"
                        },
                        {
                            "const": "azure.network.VirtualNetworks"
                        },
                        {
                            "const": "azure.network.VirtualWans"
                        },
                        {
                            "const": "azure.security.ApplicationSecurityGroups"
                        },
                        {
                            "const": "azure.security.ConditionalAccess"
                        },
                        {
                            "const": "azure.security.Defender"
                        },
                        {
                            "const": "azure.security.ExtendedSecurityUpdates"
                        },
                        {
                            "const": "azure.security.KeyVaults"
                        },
                        {
                            "const": "azure.security.SecurityCenter"
                        },
                        {
                            "const": "azure.security.Sentinel"
                        },
                        {
                            "const": "azure.storage.ArchiveStorage"
                        },
                        {
                            "const": "azure.storage.Azurefxtedgefiler"
                        },
                        {
                            "const": "azure.storage.BlobStorage"
                        },
                        {
                            "const": "azure.storage.DataBoxEdgeDataBoxGateway"
                        },
                        {
                            "const": "azure.storage.DataBox"
                        },
                        {
                            "const": "azure.storage.DataLakeStorage"
                        },
                        {
                            "const": "azure.storage.GeneralStorage"
                        },
                        {
                            "const": "azure.storage.NetappFiles"
                        },
                        {
                            "const": "azure.storage.QueuesStorage"
                        },
                        {
                            "const": "azure.storage.StorageAccountsClassic"
                        },
                        {
                            "const": "azure.storage.StorageAccounts"
                        },
                        {
                            "const": "azure.storage.StorageExplorer"
                        },
                        {
                            "const": "azure.storage.StorageSyncServices"
                        },
                        {
                            "const": "azure.storage.StorsimpleDataManagers"
                        },
                        {
                            "const": "azure.storage.StorsimpleDeviceManagers"
                        },
                        {
                            "const": "azure.storage.TableStorage"
                        },
                        {
                            "const": "azure.web.APIConnections"
                        },
                        {
                            "const": "azure.web.AppServiceCertificates"
                        },
                        {
                            "const": "azure.web.AppServiceDomains"
                        },
                        {
                            "const": "azure.web.AppServiceEnvironments"
                        },
                        {
                            "const": "azure.web.AppServicePlans"
                        },
                        {
                            "const": "azure.web.AppServices"
                        },
                        {
                            "const": "azure.web.MediaServices"
                        },
                        {
                            "const": "azure.web.NotificationHubNamespaces"
                        },
                        {
                            "const": "azure.web.Search"
                        },
                        {
                            "const": "azure.web.Signalr"
                        },
                        {
                            "const": "digitalocean.compute.Containers"
                        },
                        {
                            "const": "digitalocean.compute.Docker"
                        },
                        {
                            "const": "digitalocean.compute.DropletConnect"
                        },
                        {
                            "const": "digitalocean.compute.DropletSnapshot"
                        },
                        {
                            "const": "digitalocean.compute.Droplet"
                        },
                        {
                            "const": "digitalocean.compute.K8SCluster"
                        },
                        {
                            "const": "digitalocean.compute.K8SNodePool"
                        },
                        {
                            "const": "digitalocean.compute.K8SNode"
                        },
                        {
                            "const": "digitalocean.database.DbaasPrimaryStandbyMore"
                        },
                        {
                            "const": "digitalocean.database.DbaasPrimary"
                        },
                        {
                            "const": "digitalocean.database.DbaasReadOnly"
                        },
                        {
                            "const": "digitalocean.database.DbaasStandby"
                        },
                        {
                            "const": "digitalocean.network.Certificate"
                        },
                        {
                            "const": "digitalocean.network.DomainRegistration"
                        },
                        {
                            "const": "digitalocean.network.Domain"
                        },
                        {
                            "const": "digitalocean.network.Firewall"
                        },
                        {
                            "const": "digitalocean.network.FloatingIp"
                        },
                        {
                            "const": "digitalocean.network.InternetGateway"
                        },
                        {
                            "const": "digitalocean.network.LoadBalancer"
                        },
                        {
                            "const": "digitalocean.network.ManagedVpn"
                        },
                        {
                            "const": "digitalocean.network.Vpc"
                        },
                        {
                            "const": "digitalocean.storage.Folder"
                        },
                        {
                            "const": "digitalocean.storage.Space"
                        },
                        {
                            "const": "digitalocean.storage.VolumeSnapshot"
                        },
                        {
                            "const": "digitalocean.storage.Volume"
                        },
                        {
                            "const": "elastic.agent.Agent"
                        },
                        {
                            "const": "elastic.agent.Endpoint"
                        },
                        {
                            "const": "elastic.agent.Fleet"
                        },
                        {
                            "const": "elastic.agent.Integrations"
                        },
                        {
                            "const": "elastic.beats.APM"
                        },
                        {
                            "const": "elastic.beats.Auditbeat"
                        },
                        {
                            "const": "elastic.beats.Filebeat"
                        },
                        {
                            "const": "elastic.beats.Functionbeat"
                        },
                        {
                            "const": "elastic.beats.Heartbeat"
                        },
                        {
                            "const": "elastic.beats.Metricbeat"
                        },
                        {
                            "const": "elastic.beats.Packetbeat"
                        },
                        {
                            "const": "elastic.beats.Winlogbeat"
                        },
                        {
                            "const": "elastic.elasticsearch.Alerting"
                        },
                        {
                            "const": "elastic.elasticsearch.Beats"
                        },
                        {
                            "const": "elastic.elasticsearch.Elasticsearch"
                        },
                        {
                            "const": "elastic.elasticsearch.ElasticSearch"
                        },
                        {
                            "const": "elastic.elasticsearch.Kibana"
                        },
                        {
                            "const": "elastic.elasticsearch.LogstashPipeline"
                        },
                        {
                            "const": "elastic.elasticsearch.Logstash"
                        },
                        {
                            "const": "elastic.elasticsearch.LogStash"
                        },
                        {
                            "const": "elastic.elasticsearch.MachineLearning"
                        },
                        {
                            "const": "elastic.elasticsearch.ML"
                        },
                        {
                            "const": "elastic.elasticsearch.MapServices"
                        },
                        {
                            "const": "elastic.elasticsearch.Maps"
                        },
                        {
                            "const": "elastic.elasticsearch.Monitoring"
                        },
                        {
                            "const": "elastic.elasticsearch.SearchableSnapshots"
                        },
                        {
                            "const": "elastic.elasticsearch.SecuritySettings"
                        },
                        {
                            "const": "elastic.elasticsearch.SQL"
                        },
                        {
                            "const": "elastic.elasticsearch.Stack"
                        },
                        {
                            "const": "elastic.enterprisesearch.AppSearch"
                        },
                        {
                            "const": "elastic.enterprisesearch.Crawler"
                        },
                        {
                            "const": "elastic.enterprisesearch.EnterpriseSearch"
                        },
                        {
                            "const": "elastic.enterprisesearch.SiteSearch"
                        },
                        {
                            "const": "elastic.enterprisesearch.WorkplaceSearch"
                        },
                        {
                            "const": "elastic.observability.APM"
                        },
                        {
                            "const": "elastic.observability.Logs"
                        },
                        {
                            "const": "elastic.observability.Metrics"
                        },
                        {
                            "const": "elastic.observability.Observability"
                        },
                        {
                            "const": "elastic.observability.Uptime"
                        },
                        {
                            "const": "elastic.orchestration.ECE"
                        },
                        {
                            "const": "elastic.orchestration.ECK"
                        },
                        {
                            "const": "elastic.saas.Cloud"
                        },
                        {
                            "const": "elastic.saas.Elastic"
                        },
                        {
                            "const": "elastic.security.Endpoint"
                        },
                        {
                            "const": "elastic.security.Security"
                        },
                        {
                            "const": "elastic.security.SIEM"
                        },
                        {
                            "const": "elastic.security.Xdr"
                        },
                        {
                            "const": "firebase.base.Firebase"
                        },
                        {
                            "const": "firebase.develop.Authentication"
                        },
                        {
                            "const": "firebase.develop.Firestore"
                        },
                        {
                            "const": "firebase.develop.Functions"
                        },
                        {
                            "const": "firebase.develop.Hosting"
                        },
                        {
                            "const": "firebase.develop.MLKit"
                        },
                        {
                            "const": "firebase.develop.RealtimeDatabase"
                        },
                        {
                            "const": "firebase.develop.Storage"
                        },
                        {
                            "const": "firebase.extentions.Extensions"
                        },
                        {
                            "const": "firebase.grow.ABTesting"
                        },
                        {
                            "const": "firebase.grow.AppIndexing"
                        },
                        {
                            "const": "firebase.grow.DynamicLinks"
                        },
                        {
                            "const": "firebase.grow.InAppMessaging"
                        },
                        {
                            "const": "firebase.grow.Invites"
                        },
                        {
                            "const": "firebase.grow.Messaging"
                        },
                        {
                            "const": "firebase.grow.FCM"
                        },
                        {
                            "const": "firebase.grow.Predictions"
                        },
                        {
                            "const": "firebase.grow.RemoteConfig"
                        },
                        {
                            "const": "firebase.quality.AppDistribution"
                        },
                        {
                            "const": "firebase.quality.CrashReporting"
                        },
                        {
                            "const": "firebase.quality.Crashlytics"
                        },
                        {
                            "const": "firebase.quality.PerformanceMonitoring"
                        },
                        {
                            "const": "firebase.quality.TestLab"
                        },
                        {
                            "const": "gcp.analytics.Bigquery"
                        },
                        {
                            "const": "gcp.analytics.BigQuery"
                        },
                        {
                            "const": "gcp.analytics.Composer"
                        },
                        {
                            "const": "gcp.analytics.DataCatalog"
                        },
                        {
                            "const": "gcp.analytics.DataFusion"
                        },
                        {
                            "const": "gcp.analytics.Dataflow"
                        },
                        {
                            "const": "gcp.analytics.Datalab"
                        },
                        {
                            "const": "gcp.analytics.Dataprep"
                        },
                        {
                            "const": "gcp.analytics.Dataproc"
                        },
                        {
                            "const": "gcp.analytics.Genomics"
                        },
                        {
                            "const": "gcp.analytics.Pubsub"
                        },
                        {
                            "const": "gcp.analytics.PubSub"
                        },
                        {
                            "const": "gcp.api.APIGateway"
                        },
                        {
                            "const": "gcp.api.Endpoints"
                        },
                        {
                            "const": "gcp.compute.AppEngine"
                        },
                        {
                            "const": "gcp.compute.GAE"
                        },
                        {
                            "const": "gcp.compute.ComputeEngine"
                        },
                        {
                            "const": "gcp.compute.GCE"
                        },
                        {
                            "const": "gcp.compute.ContainerOptimizedOS"
                        },
                        {
                            "const": "gcp.compute.Functions"
                        },
                        {
                            "const": "gcp.compute.GCF"
                        },
                        {
                            "const": "gcp.compute.GKEOnPrem"
                        },
                        {
                            "const": "gcp.compute.GPU"
                        },
                        {
                            "const": "gcp.compute.KubernetesEngine"
                        },
                        {
                            "const": "gcp.compute.GKE"
                        },
                        {
                            "const": "gcp.compute.Run"
                        },
                        {
                            "const": "gcp.database.Bigtable"
                        },
                        {
                            "const": "gcp.database.BigTable"
                        },
                        {
                            "const": "gcp.database.Datastore"
                        },
                        {
                            "const": "gcp.database.Firestore"
                        },
                        {
                            "const": "gcp.database.Memorystore"
                        },
                        {
                            "const": "gcp.database.Spanner"
                        },
                        {
                            "const": "gcp.database.SQL"
                        },
                        {
                            "const": "gcp.devtools.Build"
                        },
                        {
                            "const": "gcp.devtools.CodeForIntellij"
                        },
                        {
                            "const": "gcp.devtools.Code"
                        },
                        {
                            "const": "gcp.devtools.ContainerRegistry"
                        },
                        {
                            "const": "gcp.devtools.GCR"
                        },
                        {
                            "const": "gcp.devtools.GradleAppEnginePlugin"
                        },
                        {
                            "const": "gcp.devtools.IdePlugins"
                        },
                        {
                            "const": "gcp.devtools.MavenAppEnginePlugin"
                        },
                        {
                            "const": "gcp.devtools.Scheduler"
                        },
                        {
                            "const": "gcp.devtools.SDK"
                        },
                        {
                            "const": "gcp.devtools.SourceRepositories"
                        },
                        {
                            "const": "gcp.devtools.Tasks"
                        },
                        {
                            "const": "gcp.devtools.TestLab"
                        },
                        {
                            "const": "gcp.devtools.ToolsForEclipse"
                        },
                        {
                            "const": "gcp.devtools.ToolsForPowershell"
                        },
                        {
                            "const": "gcp.devtools.ToolsForVisualStudio"
                        },
                        {
                            "const": "gcp.iot.IotCore"
                        },
                        {
                            "const": "gcp.migration.TransferAppliance"
                        },
                        {
                            "const": "gcp.ml.AdvancedSolutionsLab"
                        },
                        {
                            "const": "gcp.ml.AIHub"
                        },
                        {
                            "const": "gcp.ml.AIPlatformDataLabelingService"
                        },
                        {
                            "const": "gcp.ml.AIPlatform"
                        },
                        {
                            "const": "gcp.ml.AutomlNaturalLanguage"
                        },
                        {
                            "const": "gcp.ml.AutomlTables"
                        },
                        {
                            "const": "gcp.ml.AutomlTranslation"
                        },
                        {
                            "const": "gcp.ml.AutomlVideoIntelligence"
                        },
                        {
                            "const": "gcp.ml.AutomlVision"
                        },
                        {
                            "const": "gcp.ml.Automl"
                        },
                        {
                            "const": "gcp.ml.AutoML"
                        },
                        {
                            "const": "gcp.ml.DialogFlowEnterpriseEdition"
                        },
                        {
                            "const": "gcp.ml.InferenceAPI"
                        },
                        {
                            "const": "gcp.ml.JobsAPI"
                        },
                        {
                            "const": "gcp.ml.NaturalLanguageAPI"
                        },
                        {
                            "const": "gcp.ml.NLAPI"
                        },
                        {
                            "const": "gcp.ml.RecommendationsAI"
                        },
                        {
                            "const": "gcp.ml.SpeechToText"
                        },
                        {
                            "const": "gcp.ml.STT"
                        },
                        {
                            "const": "gcp.ml.TextToSpeech"
                        },
                        {
                            "const": "gcp.ml.TTS"
                        },
                        {
                            "const": "gcp.ml.TPU"
                        },
                        {
                            "const": "gcp.ml.TranslationAPI"
                        },
                        {
                            "const": "gcp.ml.VideoIntelligenceAPI"
                        },
                        {
                            "const": "gcp.ml.VisionAPI"
                        },
                        {
                            "const": "gcp.network.Armor"
                        },
                        {
                            "const": "gcp.network.CDN"
                        },
                        {
                            "const": "gcp.network.DedicatedInterconnect"
                        },
                        {
                            "const": "gcp.network.DNS"
                        },
                        {
                            "const": "gcp.network.ExternalIpAddresses"
                        },
                        {
                            "const": "gcp.network.FirewallRules"
                        },
                        {
                            "const": "gcp.network.LoadBalancing"
                        },
                        {
                            "const": "gcp.network.NAT"
                        },
                        {
                            "const": "gcp.network.Network"
                        },
                        {
                            "const": "gcp.network.PartnerInterconnect"
                        },
                        {
                            "const": "gcp.network.PremiumNetworkTier"
                        },
                        {
                            "const": "gcp.network.Router"
                        },
                        {
                            "const": "gcp.network.Routes"
                        },
                        {
                            "const": "gcp.network.StandardNetworkTier"
                        },
                        {
                            "const": "gcp.network.TrafficDirector"
                        },
                        {
                            "const": "gcp.network.VirtualPrivateCloud"
                        },
                        {
                            "const": "gcp.network.VPC"
                        },
                        {
                            "const": "gcp.network.VPN"
                        },
                        {
                            "const": "gcp.operations.Monitoring"
                        },
                        {
                            "const": "gcp.security.Iam"
                        },
                        {
                            "const": "gcp.security.IAP"
                        },
                        {
                            "const": "gcp.security.KeyManagementService"
                        },
                        {
                            "const": "gcp.security.KMS"
                        },
                        {
                            "const": "gcp.security.ResourceManager"
                        },
                        {
                            "const": "gcp.security.SecurityCommandCenter"
                        },
                        {
                            "const": "gcp.security.SCC"
                        },
                        {
                            "const": "gcp.security.SecurityScanner"
                        },
                        {
                            "const": "gcp.storage.Filestore"
                        },
                        {
                            "const": "gcp.storage.PersistentDisk"
                        },
                        {
                            "const": "gcp.storage.Storage"
                        },
                        {
                            "const": "gcp.storage.GCS"
                        },
                        {
                            "const": "generic.blank.Blank"
                        },
                        {
                            "const": "generic.compute.Rack"
                        },
                        {
                            "const": "generic.database.SQL"
                        },
                        {
                            "const": "generic.device.Mobile"
                        },
                        {
                            "const": "generic.device.Tablet"
                        },
                        {
                            "const": "generic.network.Firewall"
                        },
                        {
                            "const": "generic.network.Router"
                        },
                        {
                            "const": "generic.network.Subnet"
                        },
                        {
                            "const": "generic.network.Switch"
                        },
                        {
                            "const": "generic.network.VPN"
                        },
                        {
                            "const": "generic.os.Android"
                        },
                        {
                            "const": "generic.os.Centos"
                        },
                        {
                            "const": "generic.os.Debian"
                        },
                        {
                            "const": "generic.os.IOS"
                        },
                        {
                            "const": "generic.os.LinuxGeneral"
                        },
                        {
                            "const": "generic.os.Raspbian"
                        },
                        {
                            "const": "generic.os.RedHat"
                        },
                        {
                            "const": "generic.os.Suse"
                        },
                        {
                            "const": "generic.os.Ubuntu"
                        },
                        {
                            "const": "generic.os.Windows"
                        },
                        {
                            "const": "generic.place.Datacenter"
                        },
                        {
                            "const": "generic.storage.Storage"
                        },
                        {
                            "const": "generic.virtualization.Virtualbox"
                        },
                        {
                            "const": "generic.virtualization.Vmware"
                        },
                        {
                            "const": "generic.virtualization.XEN"
                        },
                        {
                            "const": "ibm.analytics.Analytics"
                        },
                        {
                            "const": "ibm.analytics.DataIntegration"
                        },
                        {
                            "const": "ibm.analytics.DataRepositories"
                        },
                        {
                            "const": "ibm.analytics.DeviceAnalytics"
                        },
                        {
                            "const": "ibm.analytics.StreamingComputing"
                        },
                        {
                            "const": "ibm.applications.ActionableInsight"
                        },
                        {
                            "const": "ibm.applications.Annotate"
                        },
                        {
                            "const": "ibm.applications.ApiDeveloperPortal"
                        },
                        {
                            "const": "ibm.applications.ApiPolyglotRuntimes"
                        },
                        {
                            "const": "ibm.applications.AppServer"
                        },
                        {
                            "const": "ibm.applications.ApplicationLogic"
                        },
                        {
                            "const": "ibm.applications.EnterpriseApplications"
                        },
                        {
                            "const": "ibm.applications.Index"
                        },
                        {
                            "const": "ibm.applications.IotApplication"
                        },
                        {
                            "const": "ibm.applications.Microservice"
                        },
                        {
                            "const": "ibm.applications.MobileApp"
                        },
                        {
                            "const": "ibm.applications.Ontology"
                        },
                        {
                            "const": "ibm.applications.OpenSourceTools"
                        },
                        {
                            "const": "ibm.applications.RuntimeServices"
                        },
                        {
                            "const": "ibm.applications.SaasApplications"
                        },
                        {
                            "const": "ibm.applications.ServiceBroker"
                        },
                        {
                            "const": "ibm.applications.SpeechToText"
                        },
                        {
                            "const": "ibm.applications.VisualRecognition"
                        },
                        {
                            "const": "ibm.applications.Visualization"
                        },
                        {
                            "const": "ibm.blockchain.BlockchainDeveloper"
                        },
                        {
                            "const": "ibm.blockchain.Blockchain"
                        },
                        {
                            "const": "ibm.blockchain.CertificateAuthority"
                        },
                        {
                            "const": "ibm.blockchain.ClientApplication"
                        },
                        {
                            "const": "ibm.blockchain.Communication"
                        },
                        {
                            "const": "ibm.blockchain.Consensus"
                        },
                        {
                            "const": "ibm.blockchain.EventListener"
                        },
                        {
                            "const": "ibm.blockchain.Event"
                        },
                        {
                            "const": "ibm.blockchain.ExistingEnterpriseSystems"
                        },
                        {
                            "const": "ibm.blockchain.HyperledgerFabric"
                        },
                        {
                            "const": "ibm.blockchain.KeyManagement"
                        },
                        {
                            "const": "ibm.blockchain.Ledger"
                        },
                        {
                            "const": "ibm.blockchain.MembershipServicesProviderApi"
                        },
                        {
                            "const": "ibm.blockchain.Membership"
                        },
                        {
                            "const": "ibm.blockchain.MessageBus"
                        },
                        {
                            "const": "ibm.blockchain.Node"
                        },
                        {
                            "const": "ibm.blockchain.Services"
                        },
                        {
                            "const": "ibm.blockchain.SmartContract"
                        },
                        {
                            "const": "ibm.blockchain.TransactionManager"
                        },
                        {
                            "const": "ibm.blockchain.Wallet"
                        },
                        {
                            "const": "ibm.compute.BareMetalServer"
                        },
                        {
                            "const": "ibm.compute.ImageService"
                        },
                        {
                            "const": "ibm.compute.Instance"
                        },
                        {
                            "const": "ibm.compute.Key"
                        },
                        {
                            "const": "ibm.compute.PowerInstance"
                        },
                        {
                            "const": "ibm.data.Caches"
                        },
                        {
                            "const": "ibm.data.Cloud"
                        },
                        {
                            "const": "ibm.data.ConversationTrainedDeployed"
                        },
                        {
                            "const": "ibm.data.DataServices"
                        },
                        {
                            "const": "ibm.data.DataSources"
                        },
                        {
                            "const": "ibm.data.DeviceIdentityService"
                        },
                        {
                            "const": "ibm.data.DeviceRegistry"
                        },
                        {
                            "const": "ibm.data.EnterpriseData"
                        },
                        {
                            "const": "ibm.data.EnterpriseUserDirectory"
                        },
                        {
                            "const": "ibm.data.FileRepository"
                        },
                        {
                            "const": "ibm.data.GroundTruth"
                        },
                        {
                            "const": "ibm.data.Model"
                        },
                        {
                            "const": "ibm.data.TmsDataInterface"
                        },
                        {
                            "const": "ibm.devops.ArtifactManagement"
                        },
                        {
                            "const": "ibm.devops.BuildTest"
                        },
                        {
                            "const": "ibm.devops.CodeEditor"
                        },
                        {
                            "const": "ibm.devops.CollaborativeDevelopment"
                        },
                        {
                            "const": "ibm.devops.ConfigurationManagement"
                        },
                        {
                            "const": "ibm.devops.ContinuousDeploy"
                        },
                        {
                            "const": "ibm.devops.ContinuousTesting"
                        },
                        {
                            "const": "ibm.devops.Devops"
                        },
                        {
                            "const": "ibm.devops.Provision"
                        },
                        {
                            "const": "ibm.devops.ReleaseManagement"
                        },
                        {
                            "const": "ibm.general.CloudMessaging"
                        },
                        {
                            "const": "ibm.general.CloudServices"
                        },
                        {
                            "const": "ibm.general.Cloudant"
                        },
                        {
                            "const": "ibm.general.CognitiveServices"
                        },
                        {
                            "const": "ibm.general.DataSecurity"
                        },
                        {
                            "const": "ibm.general.Enterprise"
                        },
                        {
                            "const": "ibm.general.GovernanceRiskCompliance"
                        },
                        {
                            "const": "ibm.general.IBMContainers"
                        },
                        {
                            "const": "ibm.general.IBMPublicCloud"
                        },
                        {
                            "const": "ibm.general.IdentityAccessManagement"
                        },
                        {
                            "const": "ibm.general.IdentityProvider"
                        },
                        {
                            "const": "ibm.general.InfrastructureSecurity"
                        },
                        {
                            "const": "ibm.general.Internet"
                        },
                        {
                            "const": "ibm.general.IotCloud"
                        },
                        {
                            "const": "ibm.general.MicroservicesApplication"
                        },
                        {
                            "const": "ibm.general.MicroservicesMesh"
                        },
                        {
                            "const": "ibm.general.MonitoringLogging"
                        },
                        {
                            "const": "ibm.general.Monitoring"
                        },
                        {
                            "const": "ibm.general.ObjectStorage"
                        },
                        {
                            "const": "ibm.general.OfflineCapabilities"
                        },
                        {
                            "const": "ibm.general.Openwhisk"
                        },
                        {
                            "const": "ibm.general.PeerCloud"
                        },
                        {
                            "const": "ibm.general.RetrieveRank"
                        },
                        {
                            "const": "ibm.general.Scalable"
                        },
                        {
                            "const": "ibm.general.ServiceDiscoveryConfiguration"
                        },
                        {
                            "const": "ibm.general.TextToSpeech"
                        },
                        {
                            "const": "ibm.general.TransformationConnectivity"
                        },
                        {
                            "const": "ibm.infrastructure.Channels"
                        },
                        {
                            "const": "ibm.infrastructure.CloudMessaging"
                        },
                        {
                            "const": "ibm.infrastructure.Dashboard"
                        },
                        {
                            "const": "ibm.infrastructure.Diagnostics"
                        },
                        {
                            "const": "ibm.infrastructure.EdgeServices"
                        },
                        {
                            "const": "ibm.infrastructure.EnterpriseMessaging"
                        },
                        {
                            "const": "ibm.infrastructure.EventFeed"
                        },
                        {
                            "const": "ibm.infrastructure.InfrastructureServices"
                        },
                        {
                            "const": "ibm.infrastructure.InterserviceCommunication"
                        },
                        {
                            "const": "ibm.infrastructure.LoadBalancingRouting"
                        },
                        {
                            "const": "ibm.infrastructure.MicroservicesMesh"
                        },
                        {
                            "const": "ibm.infrastructure.MobileBackend"
                        },
                        {
                            "const": "ibm.infrastructure.MobileProviderNetwork"
                        },
                        {
                            "const": "ibm.infrastructure.MonitoringLogging"
                        },
                        {
                            "const": "ibm.infrastructure.Monitoring"
                        },
                        {
                            "const": "ibm.infrastructure.PeerServices"
                        },
                        {
                            "const": "ibm.infrastructure.ServiceDiscoveryConfiguration"
                        },
                        {
                            "const": "ibm.infrastructure.TransformationConnectivity"
                        },
                        {
                            "const": "ibm.management.AlertNotification"
                        },
                        {
                            "const": "ibm.management.ApiManagement"
                        },
                        {
                            "const": "ibm.management.CloudManagement"
                        },
                        {
                            "const": "ibm.management.ClusterManagement"
                        },
                        {
                            "const": "ibm.management.ContentManagement"
                        },
                        {
                            "const": "ibm.management.DataServices"
                        },
                        {
                            "const": "ibm.management.DeviceManagement"
                        },
                        {
                            "const": "ibm.management.InformationGovernance"
                        },
                        {
                            "const": "ibm.management.ItServiceManagement"
                        },
                        {
                            "const": "ibm.management.Management"
                        },
                        {
                            "const": "ibm.management.MonitoringMetrics"
                        },
                        {
                            "const": "ibm.management.ProcessManagement"
                        },
                        {
                            "const": "ibm.management.ProviderCloudPortalService"
                        },
                        {
                            "const": "ibm.management.PushNotifications"
                        },
                        {
                            "const": "ibm.management.ServiceManagementTools"
                        },
                        {
                            "const": "ibm.network.Bridge"
                        },
                        {
                            "const": "ibm.network.DirectLink"
                        },
                        {
                            "const": "ibm.network.Enterprise"
                        },
                        {
                            "const": "ibm.network.Firewall"
                        },
                        {
                            "const": "ibm.network.FloatingIp"
                        },
                        {
                            "const": "ibm.network.Gateway"
                        },
                        {
                            "const": "ibm.network.InternetServices"
                        },
                        {
                            "const": "ibm.network.LoadBalancerListener"
                        },
                        {
                            "const": "ibm.network.LoadBalancerPool"
                        },
                        {
                            "const": "ibm.network.LoadBalancer"
                        },
                        {
                            "const": "ibm.network.LoadBalancingRouting"
                        },
                        {
                            "const": "ibm.network.PublicGateway"
                        },
                        {
                            "const": "ibm.network.Region"
                        },
                        {
                            "const": "ibm.network.Router"
                        },
                        {
                            "const": "ibm.network.Rules"
                        },
                        {
                            "const": "ibm.network.Subnet"
                        },
                        {
                            "const": "ibm.network.TransitGateway"
                        },
                        {
                            "const": "ibm.network.Vpc"
                        },
                        {
                            "const": "ibm.network.VpnConnection"
                        },
                        {
                            "const": "ibm.network.VpnGateway"
                        },
                        {
                            "const": "ibm.network.VpnPolicy"
                        },
                        {
                            "const": "ibm.security.ApiSecurity"
                        },
                        {
                            "const": "ibm.security.BlockchainSecurityService"
                        },
                        {
                            "const": "ibm.security.DataSecurity"
                        },
                        {
                            "const": "ibm.security.Firewall"
                        },
                        {
                            "const": "ibm.security.Gateway"
                        },
                        {
                            "const": "ibm.security.GovernanceRiskCompliance"
                        },
                        {
                            "const": "ibm.security.IdentityAccessManagement"
                        },
                        {
                            "const": "ibm.security.IdentityProvider"
                        },
                        {
                            "const": "ibm.security.InfrastructureSecurity"
                        },
                        {
                            "const": "ibm.security.PhysicalSecurity"
                        },
                        {
                            "const": "ibm.security.SecurityMonitoringIntelligence"
                        },
                        {
                            "const": "ibm.security.SecurityServices"
                        },
                        {
                            "const": "ibm.security.TrustendComputing"
                        },
                        {
                            "const": "ibm.security.Vpn"
                        },
                        {
                            "const": "ibm.social.Communities"
                        },
                        {
                            "const": "ibm.social.FileSync"
                        },
                        {
                            "const": "ibm.social.LiveCollaboration"
                        },
                        {
                            "const": "ibm.social.Messaging"
                        },
                        {
                            "const": "ibm.social.Networking"
                        },
                        {
                            "const": "ibm.storage.BlockStorage"
                        },
                        {
                            "const": "ibm.storage.ObjectStorage"
                        },
                        {
                            "const": "ibm.user.Browser"
                        },
                        {
                            "const": "ibm.user.Device"
                        },
                        {
                            "const": "ibm.user.IntegratedDigitalExperiences"
                        },
                        {
                            "const": "ibm.user.PhysicalEntity"
                        },
                        {
                            "const": "ibm.user.Sensor"
                        },
                        {
                            "const": "ibm.user.User"
                        },
                        {
                            "const": "k8s.chaos.ChaosMesh"
                        },
                        {
                            "const": "k8s.chaos.LitmusChaos"
                        },
                        {
                            "const": "k8s.clusterconfig.HPA"
                        },
                        {
                            "const": "k8s.clusterconfig.HorizontalPodAutoscaler"
                        },
                        {
                            "const": "k8s.clusterconfig.Limits"
                        },
                        {
                            "const": "k8s.clusterconfig.LimitRange"
                        },
                        {
                            "const": "k8s.clusterconfig.Quota"
                        },
                        {
                            "const": "k8s.compute.Cronjob"
                        },
                        {
                            "const": "k8s.compute.Deploy"
                        },
                        {
                            "const": "k8s.compute.Deployment"
                        },
                        {
                            "const": "k8s.compute.DS"
                        },
                        {
                            "const": "k8s.compute.DaemonSet"
                        },
                        {
                            "const": "k8s.compute.Job"
                        },
                        {
                            "const": "k8s.compute.Pod"
                        },
                        {
                            "const": "k8s.compute.RS"
                        },
                        {
                            "const": "k8s.compute.ReplicaSet"
                        },
                        {
                            "const": "k8s.compute.STS"
                        },
                        {
                            "const": "k8s.compute.StatefulSet"
                        },
                        {
                            "const": "k8s.controlplane.API"
                        },
                        {
                            "const": "k8s.controlplane.APIServer"
                        },
                        {
                            "const": "k8s.controlplane.CCM"
                        },
                        {
                            "const": "k8s.controlplane.CM"
                        },
                        {
                            "const": "k8s.controlplane.ControllerManager"
                        },
                        {
                            "const": "k8s.controlplane.KProxy"
                        },
                        {
                            "const": "k8s.controlplane.KubeProxy"
                        },
                        {
                            "const": "k8s.controlplane.Kubelet"
                        },
                        {
                            "const": "k8s.controlplane.Sched"
                        },
                        {
                            "const": "k8s.controlplane.Scheduler"
                        },
                        {
                            "const": "k8s.ecosystem.ExternalDns"
                        },
                        {
                            "const": "k8s.ecosystem.Helm"
                        },
                        {
                            "const": "k8s.ecosystem.Krew"
                        },
                        {
                            "const": "k8s.ecosystem.Kustomize"
                        },
                        {
                            "const": "k8s.group.NS"
                        },
                        {
                            "const": "k8s.group.Namespace"
                        },
                        {
                            "const": "k8s.infra.ETCD"
                        },
                        {
                            "const": "k8s.infra.Master"
                        },
                        {
                            "const": "k8s.infra.Node"
                        },
                        {
                            "const": "k8s.network.Ep"
                        },
                        {
                            "const": "k8s.network.Endpoint"
                        },
                        {
                            "const": "k8s.network.Ing"
                        },
                        {
                            "const": "k8s.network.Ingress"
                        },
                        {
                            "const": "k8s.network.Netpol"
                        },
                        {
                            "const": "k8s.network.NetworkPolicy"
                        },
                        {
                            "const": "k8s.network.SVC"
                        },
                        {
                            "const": "k8s.network.Service"
                        },
                        {
                            "const": "k8s.others.CRD"
                        },
                        {
                            "const": "k8s.others.PSP"
                        },
                        {
                            "const": "k8s.podconfig.CM"
                        },
                        {
                            "const": "k8s.podconfig.ConfigMap"
                        },
                        {
                            "const": "k8s.podconfig.Secret"
                        },
                        {
                            "const": "k8s.rbac.CRole"
                        },
                        {
                            "const": "k8s.rbac.ClusterRole"
                        },
                        {
                            "const": "k8s.rbac.CRB"
                        },
                        {
                            "const": "k8s.rbac.ClusterRoleBinding"
                        },
                        {
                            "const": "k8s.rbac.Group"
                        },
                        {
                            "const": "k8s.rbac.RB"
                        },
                        {
                            "const": "k8s.rbac.RoleBinding"
                        },
                        {
                            "const": "k8s.rbac.Role"
                        },
                        {
                            "const": "k8s.rbac.SA"
                        },
                        {
                            "const": "k8s.rbac.ServiceAccount"
                        },
                        {
                            "const": "k8s.rbac.User"
                        },
                        {
                            "const": "k8s.storage.PV"
                        },
                        {
                            "const": "k8s.storage.PersistentVolume"
                        },
                        {
                            "const": "k8s.storage.PVC"
                        },
                        {
                            "const": "k8s.storage.PersistentVolumeClaim"
                        },
                        {
                            "const": "k8s.storage.SC"
                        },
                        {
                            "const": "k8s.storage.StorageClass"
                        },
                        {
                            "const": "k8s.storage.Vol"
                        },
                        {
                            "const": "k8s.storage.Volume"
                        },
                        {
                            "const": "oci.compute.AutoscaleWhite"
                        },
                        {
                            "const": "oci.compute.Autoscale"
                        },
                        {
                            "const": "oci.compute.BMWhite"
                        },
                        {
                            "const": "oci.compute.BareMetalWhite"
                        },
                        {
                            "const": "oci.compute.BM"
                        },
                        {
                            "const": "oci.compute.BareMetal"
                        },
                        {
                            "const": "oci.compute.ContainerWhite"
                        },
                        {
                            "const": "oci.compute.Container"
                        },
                        {
                            "const": "oci.compute.FunctionsWhite"
                        },
                        {
                            "const": "oci.compute.Functions"
                        },
                        {
                            "const": "oci.compute.InstancePoolsWhite"
                        },
                        {
                            "const": "oci.compute.InstancePools"
                        },
                        {
                            "const": "oci.compute.OCIRWhite"
                        },
                        {
                            "const": "oci.compute.OCIRegistryWhite"
                        },
                        {
                            "const": "oci.compute.OCIR"
                        },
                        {
                            "const": "oci.compute.OCIRegistry"
                        },
                        {
                            "const": "oci.compute.OKEWhite"
                        },
                        {
                            "const": "oci.compute.ContainerEngineWhite"
                        },
                        {
                            "const": "oci.compute.OKE"
                        },
                        {
                            "const": "oci.compute.ContainerEngine"
                        },
                        {
                            "const": "oci.compute.VMWhite"
                        },
                        {
                            "const": "oci.compute.VirtualMachineWhite"
                        },
                        {
                            "const": "oci.compute.VM"
                        },
                        {
                            "const": "oci.compute.VirtualMachine"
                        },
                        {
                            "const": "oci.connectivity.BackboneWhite"
                        },
                        {
                            "const": "oci.connectivity.Backbone"
                        },
                        {
                            "const": "oci.connectivity.CDNWhite"
                        },
                        {
                            "const": "oci.connectivity.CDN"
                        },
                        {
                            "const": "oci.connectivity.CustomerDatacenter"
                        },
                        {
                            "const": "oci.connectivity.CustomerDatacntrWhite"
                        },
                        {
                            "const": "oci.connectivity.CustomerPremiseWhite"
                        },
                        {
                            "const": "oci.connectivity.CustomerPremise"
                        },
                        {
                            "const": "oci.connectivity.DisconnectedRegionsWhite"
                        },
                        {
                            "const": "oci.connectivity.DisconnectedRegions"
                        },
                        {
                            "const": "oci.connectivity.DNSWhite"
                        },
                        {
                            "const": "oci.connectivity.DNS"
                        },
                        {
                            "const": "oci.connectivity.FastConnectWhite"
                        },
                        {
                            "const": "oci.connectivity.FastConnect"
                        },
                        {
                            "const": "oci.connectivity.NATGatewayWhite"
                        },
                        {
                            "const": "oci.connectivity.NATGateway"
                        },
                        {
                            "const": "oci.connectivity.VPNWhite"
                        },
                        {
                            "const": "oci.connectivity.VPN"
                        },
                        {
                            "const": "oci.database.AutonomousWhite"
                        },
                        {
                            "const": "oci.database.ADBWhite"
                        },
                        {
                            "const": "oci.database.Autonomous"
                        },
                        {
                            "const": "oci.database.ADB"
                        },
                        {
                            "const": "oci.database.BigdataServiceWhite"
                        },
                        {
                            "const": "oci.database.BigdataService"
                        },
                        {
                            "const": "oci.database.DatabaseServiceWhite"
                        },
                        {
                            "const": "oci.database.DBServiceWhite"
                        },
                        {
                            "const": "oci.database.DatabaseService"
                        },
                        {
                            "const": "oci.database.DBService"
                        },
                        {
                            "const": "oci.database.DataflowApacheWhite"
                        },
                        {
                            "const": "oci.database.DataflowApache"
                        },
                        {
                            "const": "oci.database.DcatWhite"
                        },
                        {
                            "const": "oci.database.Dcat"
                        },
                        {
                            "const": "oci.database.DisWhite"
                        },
                        {
                            "const": "oci.database.Dis"
                        },
                        {
                            "const": "oci.database.DMSWhite"
                        },
                        {
                            "const": "oci.database.DMS"
                        },
                        {
                            "const": "oci.database.ScienceWhite"
                        },
                        {
                            "const": "oci.database.Science"
                        },
                        {
                            "const": "oci.database.StreamWhite"
                        },
                        {
                            "const": "oci.database.Stream"
                        },
                        {
                            "const": "oci.devops.APIGatewayWhite"
                        },
                        {
                            "const": "oci.devops.APIGateway"
                        },
                        {
                            "const": "oci.devops.APIServiceWhite"
                        },
                        {
                            "const": "oci.devops.APIService"
                        },
                        {
                            "const": "oci.devops.ResourceMgmtWhite"
                        },
                        {
                            "const": "oci.devops.ResourceMgmt"
                        },
                        {
                            "const": "oci.governance.AuditWhite"
                        },
                        {
                            "const": "oci.governance.Audit"
                        },
                        {
                            "const": "oci.governance.CompartmentsWhite"
                        },
                        {
                            "const": "oci.governance.Compartments"
                        },
                        {
                            "const": "oci.governance.GroupsWhite"
                        },
                        {
                            "const": "oci.governance.Groups"
                        },
                        {
                            "const": "oci.governance.LoggingWhite"
                        },
                        {
                            "const": "oci.governance.Logging"
                        },
                        {
                            "const": "oci.governance.OCIDWhite"
                        },
                        {
                            "const": "oci.governance.OCID"
                        },
                        {
                            "const": "oci.governance.PoliciesWhite"
                        },
                        {
                            "const": "oci.governance.Policies"
                        },
                        {
                            "const": "oci.governance.TaggingWhite"
                        },
                        {
                            "const": "oci.governance.Tagging"
                        },
                        {
                            "const": "oci.monitoring.AlarmWhite"
                        },
                        {
                            "const": "oci.monitoring.Alarm"
                        },
                        {
                            "const": "oci.monitoring.EmailWhite"
                        },
                        {
                            "const": "oci.monitoring.Email"
                        },
                        {
                            "const": "oci.monitoring.EventsWhite"
                        },
                        {
                            "const": "oci.monitoring.Events"
                        },
                        {
                            "const": "oci.monitoring.HealthCheckWhite"
                        },
                        {
                            "const": "oci.monitoring.HealthCheck"
                        },
                        {
                            "const": "oci.monitoring.NotificationsWhite"
                        },
                        {
                            "const": "oci.monitoring.Notifications"
                        },
                        {
                            "const": "oci.monitoring.QueueWhite"
                        },
                        {
                            "const": "oci.monitoring.Queue"
                        },
                        {
                            "const": "oci.monitoring.SearchWhite"
                        },
                        {
                            "const": "oci.monitoring.Search"
                        },
                        {
                            "const": "oci.monitoring.TelemetryWhite"
                        },
                        {
                            "const": "oci.monitoring.Telemetry"
                        },
                        {
                            "const": "oci.monitoring.WorkflowWhite"
                        },
                        {
                            "const": "oci.monitoring.Workflow"
                        },
                        {
                            "const": "oci.network.DrgWhite"
                        },
                        {
                            "const": "oci.network.Drg"
                        },
                        {
                            "const": "oci.network.FirewallWhite"
                        },
                        {
                            "const": "oci.network.Firewall"
                        },
                        {
                            "const": "oci.network.InternetGatewayWhite"
                        },
                        {
                            "const": "oci.network.InternetGateway"
                        },
                        {
                            "const": "oci.network.LoadBalancerWhite"
                        },
                        {
                            "const": "oci.network.LoadBalancer"
                        },
                        {
                            "const": "oci.network.RouteTableWhite"
                        },
                        {
                            "const": "oci.network.RouteTable"
                        },
                        {
                            "const": "oci.network.SecurityListsWhite"
                        },
                        {
                            "const": "oci.network.SecurityLists"
                        },
                        {
                            "const": "oci.network.ServiceGatewayWhite"
                        },
                        {
                            "const": "oci.network.ServiceGateway"
                        },
                        {
                            "const": "oci.network.VcnWhite"
                        },
                        {
                            "const": "oci.network.Vcn"
                        },
                        {
                            "const": "oci.security.CloudGuardWhite"
                        },
                        {
                            "const": "oci.security.CloudGuard"
                        },
                        {
                            "const": "oci.security.DDOSWhite"
                        },
                        {
                            "const": "oci.security.DDOS"
                        },
                        {
                            "const": "oci.security.EncryptionWhite"
                        },
                        {
                            "const": "oci.security.Encryption"
                        },
                        {
                            "const": "oci.security.IDAccessWhite"
                        },
                        {
                            "const": "oci.security.IDAccess"
                        },
                        {
                            "const": "oci.security.KeyManagementWhite"
                        },
                        {
                            "const": "oci.security.KeyManagement"
                        },
                        {
                            "const": "oci.security.MaxSecurityZoneWhite"
                        },
                        {
                            "const": "oci.security.MaxSecurityZone"
                        },
                        {
                            "const": "oci.security.VaultWhite"
                        },
                        {
                            "const": "oci.security.Vault"
                        },
                        {
                            "const": "oci.security.WAFWhite"
                        },
                        {
                            "const": "oci.security.WAF"
                        },
                        {
                            "const": "oci.storage.BackupRestoreWhite"
                        },
                        {
                            "const": "oci.storage.BackupRestore"
                        },
                        {
                            "const": "oci.storage.BlockStorageCloneWhite"
                        },
                        {
                            "const": "oci.storage.BlockStorageClone"
                        },
                        {
                            "const": "oci.storage.BlockStorageWhite"
                        },
                        {
                            "const": "oci.storage.BlockStorage"
                        },
                        {
                            "const": "oci.storage.BucketsWhite"
                        },
                        {
                            "const": "oci.storage.Buckets"
                        },
                        {
                            "const": "oci.storage.DataTransferWhite"
                        },
                        {
                            "const": "oci.storage.DataTransfer"
                        },
                        {
                            "const": "oci.storage.ElasticPerformanceWhite"
                        },
                        {
                            "const": "oci.storage.ElasticPerformance"
                        },
                        {
                            "const": "oci.storage.FileStorageWhite"
                        },
                        {
                            "const": "oci.storage.FileStorage"
                        },
                        {
                            "const": "oci.storage.ObjectStorageWhite"
                        },
                        {
                            "const": "oci.storage.ObjectStorage"
                        },
                        {
                            "const": "oci.storage.StorageGatewayWhite"
                        },
                        {
                            "const": "oci.storage.StorageGateway"
                        },
                        {
                            "const": "onprem.aggregator.Fluentd"
                        },
                        {
                            "const": "onprem.aggregator.Vector"
                        },
                        {
                            "const": "onprem.analytics.Beam"
                        },
                        {
                            "const": "onprem.analytics.Databricks"
                        },
                        {
                            "const": "onprem.analytics.Dbt"
                        },
                        {
                            "const": "onprem.analytics.Dremio"
                        },
                        {
                            "const": "onprem.analytics.Flink"
                        },
                        {
                            "const": "onprem.analytics.Hadoop"
                        },
                        {
                            "const": "onprem.analytics.Hive"
                        },
                        {
                            "const": "onprem.analytics.Metabase"
                        },
                        {
                            "const": "onprem.analytics.Norikra"
                        },
                        {
                            "const": "onprem.analytics.Powerbi"
                        },
                        {
                            "const": "onprem.analytics.PowerBI"
                        },
                        {
                            "const": "onprem.analytics.Presto"
                        },
                        {
                            "const": "onprem.analytics.Singer"
                        },
                        {
                            "const": "onprem.analytics.Spark"
                        },
                        {
                            "const": "onprem.analytics.Storm"
                        },
                        {
                            "const": "onprem.analytics.Superset"
                        },
                        {
                            "const": "onprem.analytics.Tableau"
                        },
                        {
                            "const": "onprem.auth.Boundary"
                        },
                        {
                            "const": "onprem.auth.BuzzfeedSso"
                        },
                        {
                            "const": "onprem.auth.Oauth2Proxy"
                        },
                        {
                            "const": "onprem.cd.Spinnaker"
                        },
                        {
                            "const": "onprem.cd.TektonCli"
                        },
                        {
                            "const": "onprem.cd.Tekton"
                        },
                        {
                            "const": "onprem.certificates.CertManager"
                        },
                        {
                            "const": "onprem.certificates.LetsEncrypt"
                        },
                        {
                            "const": "onprem.ci.Circleci"
                        },
                        {
                            "const": "onprem.ci.CircleCI"
                        },
                        {
                            "const": "onprem.ci.Concourseci"
                        },
                        {
                            "const": "onprem.ci.ConcourseCI"
                        },
                        {
                            "const": "onprem.ci.Droneci"
                        },
                        {
                            "const": "onprem.ci.DroneCI"
                        },
                        {
                            "const": "onprem.ci.GithubActions"
                        },
                        {
                            "const": "onprem.ci.Gitlabci"
                        },
                        {
                            "const": "onprem.ci.GitlabCI"
                        },
                        {
                            "const": "onprem.ci.Jenkins"
                        },
                        {
                            "const": "onprem.ci.Teamcity"
                        },
                        {
                            "const": "onprem.ci.TC"
                        },
                        {
                            "const": "onprem.ci.Travisci"
                        },
                        {
                            "const": "onprem.ci.TravisCI"
                        },
                        {
                            "const": "onprem.ci.Zuulci"
                        },
                        {
                            "const": "onprem.ci.ZuulCI"
                        },
                        {
                            "const": "onprem.client.Client"
                        },
                        {
                            "const": "onprem.client.User"
                        },
                        {
                            "const": "onprem.client.Users"
                        },
                        {
                            "const": "onprem.compute.Nomad"
                        },
                        {
                            "const": "onprem.compute.Server"
                        },
                        {
                            "const": "onprem.container.Containerd"
                        },
                        {
                            "const": "onprem.container.Crio"
                        },
                        {
                            "const": "onprem.container.Docker"
                        },
                        {
                            "const": "onprem.container.Firecracker"
                        },
                        {
                            "const": "onprem.container.Gvisor"
                        },
                        {
                            "const": "onprem.container.K3S"
                        },
                        {
                            "const": "onprem.container.Lxc"
                        },
                        {
                            "const": "onprem.container.LXC"
                        },
                        {
                            "const": "onprem.container.Rkt"
                        },
                        {
                            "const": "onprem.container.RKT"
                        },
                        {
                            "const": "onprem.database.Cassandra"
                        },
                        {
                            "const": "onprem.database.Clickhouse"
                        },
                        {
                            "const": "onprem.database.ClickHouse"
                        },
                        {
                            "const": "onprem.database.Cockroachdb"
                        },
                        {
                            "const": "onprem.database.CockroachDB"
                        },
                        {
                            "const": "onprem.database.Couchbase"
                        },
                        {
                            "const": "onprem.database.Couchdb"
                        },
                        {
                            "const": "onprem.database.CouchDB"
                        },
                        {
                            "const": "onprem.database.Dgraph"
                        },
                        {
                            "const": "onprem.database.Druid"
                        },
                        {
                            "const": "onprem.database.Hbase"
                        },
                        {
                            "const": "onprem.database.HBase"
                        },
                        {
                            "const": "onprem.database.Influxdb"
                        },
                        {
                            "const": "onprem.database.InfluxDB"
                        },
                        {
                            "const": "onprem.database.Janusgraph"
                        },
                        {
                            "const": "onprem.database.JanusGraph"
                        },
                        {
                            "const": "onprem.database.Mariadb"
                        },
                        {
                            "const": "onprem.database.MariaDB"
                        },
                        {
                            "const": "onprem.database.Mongodb"
                        },
                        {
                            "const": "onprem.database.MongoDB"
                        },
                        {
                            "const": "onprem.database.Mssql"
                        },
                        {
                            "const": "onprem.database.MSSQL"
                        },
                        {
                            "const": "onprem.database.Mysql"
                        },
                        {
                            "const": "onprem.database.MySQL"
                        },
                        {
                            "const": "onprem.database.Neo4J"
                        },
                        {
                            "const": "onprem.database.Oracle"
                        },
                        {
                            "const": "onprem.database.Postgresql"
                        },
                        {
                            "const": "onprem.database.PostgreSQL"
                        },
                        {
                            "const": "onprem.database.Scylla"
                        },
                        {
                            "const": "onprem.dns.Coredns"
                        },
                        {
                            "const": "onprem.dns.Powerdns"
                        },
                        {
                            "const": "onprem.etl.Embulk"
                        },
                        {
                            "const": "onprem.gitops.Argocd"
                        },
                        {
                            "const": "onprem.gitops.ArgoCD"
                        },
                        {
                            "const": "onprem.gitops.Flagger"
                        },
                        {
                            "const": "onprem.gitops.Flux"
                        },
                        {
                            "const": "onprem.groupware.Nextcloud"
                        },
                        {
                            "const": "onprem.iac.Ansible"
                        },
                        {
                            "const": "onprem.iac.Atlantis"
                        },
                        {
                            "const": "onprem.iac.Awx"
                        },
                        {
                            "const": "onprem.iac.Puppet"
                        },
                        {
                            "const": "onprem.iac.Terraform"
                        },
                        {
                            "const": "onprem.identity.Dex"
                        },
                        {
                            "const": "onprem.inmemory.Aerospike"
                        },
                        {
                            "const": "onprem.inmemory.Hazelcast"
                        },
                        {
                            "const": "onprem.inmemory.Memcached"
                        },
                        {
                            "const": "onprem.inmemory.Redis"
                        },
                        {
                            "const": "onprem.logging.Fluentbit"
                        },
                        {
                            "const": "onprem.logging.FluentBit"
                        },
                        {
                            "const": "onprem.logging.Graylog"
                        },
                        {
                            "const": "onprem.logging.Loki"
                        },
                        {
                            "const": "onprem.logging.Rsyslog"
                        },
                        {
                            "const": "onprem.logging.RSyslog"
                        },
                        {
                            "const": "onprem.logging.SyslogNg"
                        },
                        {
                            "const": "onprem.messaging.Centrifugo"
                        },
                        {
                            "const": "onprem.mlops.Mlflow"
                        },
                        {
                            "const": "onprem.mlops.Polyaxon"
                        },
                        {
                            "const": "onprem.monitoring.Cortex"
                        },
                        {
                            "const": "onprem.monitoring.Datadog"
                        },
                        {
                            "const": "onprem.monitoring.Dynatrace"
                        },
                        {
                            "const": "onprem.monitoring.Grafana"
                        },
                        {
                            "const": "onprem.monitoring.Humio"
                        },
                        {
                            "const": "onprem.monitoring.Mimir"
                        },
                        {
                            "const": "onprem.monitoring.Nagios"
                        },
                        {
                            "const": "onprem.monitoring.Newrelic"
                        },
                        {
                            "const": "onprem.monitoring.PrometheusOperator"
                        },
                        {
                            "const": "onprem.monitoring.Prometheus"
                        },
                        {
                            "const": "onprem.monitoring.Sentry"
                        },
                        {
                            "const": "onprem.monitoring.Splunk"
                        },
                        {
                            "const": "onprem.monitoring.Thanos"
                        },
                        {
                            "const": "onprem.monitoring.Zabbix"
                        },
                        {
                            "const": "onprem.network.Ambassador"
                        },
                        {
                            "const": "onprem.network.Apache"
                        },
                        {
                            "const": "onprem.network.Bind9"
                        },
                        {
                            "const": "onprem.network.Caddy"
                        },
                        {
                            "const": "onprem.network.Consul"
                        },
                        {
                            "const": "onprem.network.Envoy"
                        },
                        {
                            "const": "onprem.network.Etcd"
                        },
                        {
                            "const": "onprem.network.ETCD"
                        },
                        {
                            "const": "onprem.network.Glassfish"
                        },
                        {
                            "const": "onprem.network.Gunicorn"
                        },
                        {
                            "const": "onprem.network.Haproxy"
                        },
                        {
                            "const": "onprem.network.HAProxy"
                        },
                        {
                            "const": "onprem.network.Internet"
                        },
                        {
                            "const": "onprem.network.Istio"
                        },
                        {
                            "const": "onprem.network.Jbossas"
                        },
                        {
                            "const": "onprem.network.Jetty"
                        },
                        {
                            "const": "onprem.network.Kong"
                        },
                        {
                            "const": "onprem.network.Linkerd"
                        },
                        {
                            "const": "onprem.network.Nginx"
                        },
                        {
                            "const": "onprem.network.Ocelot"
                        },
                        {
                            "const": "onprem.network.OpenServiceMesh"
                        },
                        {
                            "const": "onprem.network.OSM"
                        },
                        {
                            "const": "onprem.network.Opnsense"
                        },
                        {
                            "const": "onprem.network.OPNSense"
                        },
                        {
                            "const": "onprem.network.Pfsense"
                        },
                        {
                            "const": "onprem.network.PFSense"
                        },
                        {
                            "const": "onprem.network.Pomerium"
                        },
                        {
                            "const": "onprem.network.Powerdns"
                        },
                        {
                            "const": "onprem.network.Tomcat"
                        },
                        {
                            "const": "onprem.network.Traefik"
                        },
                        {
                            "const": "onprem.network.Tyk"
                        },
                        {
                            "const": "onprem.network.Vyos"
                        },
                        {
                            "const": "onprem.network.VyOS"
                        },
                        {
                            "const": "onprem.network.Wildfly"
                        },
                        {
                            "const": "onprem.network.Yarp"
                        },
                        {
                            "const": "onprem.network.Zookeeper"
                        },
                        {
                            "const": "onprem.proxmox.Pve"
                        },
                        {
                            "const": "onprem.proxmox.ProxmoxVE"
                        },
                        {
                            "const": "onprem.queue.Activemq"
                        },
                        {
                            "const": "onprem.queue.ActiveMQ"
                        },
                        {
                            "const": "onprem.queue.Celery"
                        },
                        {
                            "const": "onprem.queue.Emqx"
                        },
                        {
                            "const": "onprem.queue.EMQX"
                        },
                        {
                            "const": "onprem.queue.Kafka"
                        },
                        {
                            "const": "onprem.queue.Nats"
                        },
                        {
                            "const": "onprem.queue.Rabbitmq"
                        },
                        {
                            "const": "onprem.queue.RabbitMQ"
                        },
                        {
                            "const": "onprem.queue.Zeromq"
                        },
                        {
                            "const": "onprem.queue.ZeroMQ"
                        },
                        {
                            "const": "onprem.registry.Harbor"
                        },
                        {
                            "const": "onprem.registry.Jfrog"
                        },
                        {
                            "const": "onprem.search.Solr"
                        },
                        {
                            "const": "onprem.security.Bitwarden"
                        },
                        {
                            "const": "onprem.security.Trivy"
                        },
                        {
                            "const": "onprem.security.Vault"
                        },
                        {
                            "const": "onprem.storage.CephOsd"
                        },
                        {
                            "const": "onprem.storage.CEPH_OSD"
                        },
                        {
                            "const": "onprem.storage.Ceph"
                        },
                        {
                            "const": "onprem.storage.CEPH"
                        },
                        {
                            "const": "onprem.storage.Glusterfs"
                        },
                        {
                            "const": "onprem.storage.Portworx"
                        },
                        {
                            "const": "onprem.tracing.Jaeger"
                        },
                        {
                            "const": "onprem.tracing.Tempo"
                        },
                        {
                            "const": "onprem.vcs.Git"
                        },
                        {
                            "const": "onprem.vcs.Gitea"
                        },
                        {
                            "const": "onprem.vcs.Github"
                        },
                        {
                            "const": "onprem.vcs.Gitlab"
                        },
                        {
                            "const": "onprem.vcs.Svn"
                        },
                        {
                            "const": "onprem.workflow.Airflow"
                        },
                        {
                            "const": "onprem.workflow.Digdag"
                        },
                        {
                            "const": "onprem.workflow.Kubeflow"
                        },
                        {
                            "const": "onprem.workflow.KubeFlow"
                        },
                        {
                            "const": "onprem.workflow.Nifi"
                        },
                        {
                            "const": "onprem.workflow.NiFi"
                        },
                        {
                            "const": "openstack.apiproxies.EC2API"
                        },
                        {
                            "const": "openstack.applicationlifecycle.Freezer"
                        },
                        {
                            "const": "openstack.applicationlifecycle.Masakari"
                        },
                        {
                            "const": "openstack.applicationlifecycle.Murano"
                        },
                        {
                            "const": "openstack.applicationlifecycle.Solum"
                        },
                        {
                            "const": "openstack.baremetal.Cyborg"
                        },
                        {
                            "const": "openstack.baremetal.Ironic"
                        },
                        {
                            "const": "openstack.billing.Cloudkitty"
                        },
                        {
                            "const": "openstack.billing.CloudKitty"
                        },
                        {
                            "const": "openstack.compute.Nova"
                        },
                        {
                            "const": "openstack.compute.Qinling"
                        },
                        {
                            "const": "openstack.compute.Zun"
                        },
                        {
                            "const": "openstack.containerservices.Kuryr"
                        },
                        {
                            "const": "openstack.deployment.Ansible"
                        },
                        {
                            "const": "openstack.deployment.Charms"
                        },
                        {
                            "const": "openstack.deployment.Chef"
                        },
                        {
                            "const": "openstack.deployment.Helm"
                        },
                        {
                            "const": "openstack.deployment.Kolla"
                        },
                        {
                            "const": "openstack.deployment.KollaAnsible"
                        },
                        {
                            "const": "openstack.deployment.Tripleo"
                        },
                        {
                            "const": "openstack.deployment.TripleO"
                        },
                        {
                            "const": "openstack.frontend.Horizon"
                        },
                        {
                            "const": "openstack.monitoring.Monasca"
                        },
                        {
                            "const": "openstack.monitoring.Telemetry"
                        },
                        {
                            "const": "openstack.multiregion.Tricircle"
                        },
                        {
                            "const": "openstack.networking.Designate"
                        },
                        {
                            "const": "openstack.networking.Neutron"
                        },
                        {
                            "const": "openstack.networking.Octavia"
                        },
                        {
                            "const": "openstack.nfv.Tacker"
                        },
                        {
                            "const": "openstack.optimization.Congress"
                        },
                        {
                            "const": "openstack.optimization.Rally"
                        },
                        {
                            "const": "openstack.optimization.Vitrage"
                        },
                        {
                            "const": "openstack.optimization.Watcher"
                        },
                        {
                            "const": "openstack.orchestration.Blazar"
                        },
                        {
                            "const": "openstack.orchestration.Heat"
                        },
                        {
                            "const": "openstack.orchestration.Mistral"
                        },
                        {
                            "const": "openstack.orchestration.Senlin"
                        },
                        {
                            "const": "openstack.orchestration.Zaqar"
                        },
                        {
                            "const": "openstack.packaging.LOCI"
                        },
                        {
                            "const": "openstack.packaging.Puppet"
                        },
                        {
                            "const": "openstack.packaging.RPM"
                        },
                        {
                            "const": "openstack.sharedservices.Barbican"
                        },
                        {
                            "const": "openstack.sharedservices.Glance"
                        },
                        {
                            "const": "openstack.sharedservices.Karbor"
                        },
                        {
                            "const": "openstack.sharedservices.Keystone"
                        },
                        {
                            "const": "openstack.sharedservices.Searchlight"
                        },
                        {
                            "const": "openstack.storage.Cinder"
                        },
                        {
                            "const": "openstack.storage.Manila"
                        },
                        {
                            "const": "openstack.storage.Swift"
                        },
                        {
                            "const": "openstack.user.Openstackclient"
                        },
                        {
                            "const": "openstack.user.OpenStackClient"
                        },
                        {
                            "const": "openstack.workloadprovisioning.Magnum"
                        },
                        {
                            "const": "openstack.workloadprovisioning.Sahara"
                        },
                        {
                            "const": "openstack.workloadprovisioning.Trove"
                        },
                        {
                            "const": "outscale.compute.Compute"
                        },
                        {
                            "const": "outscale.compute.DirectConnect"
                        },
                        {
                            "const": "outscale.network.ClientVpn"
                        },
                        {
                            "const": "outscale.network.InternetService"
                        },
                        {
                            "const": "outscale.network.LoadBalancer"
                        },
                        {
                            "const": "outscale.network.NatService"
                        },
                        {
                            "const": "outscale.network.Net"
                        },
                        {
                            "const": "outscale.network.SiteToSiteVpng"
                        },
                        {
                            "const": "outscale.security.Firewall"
                        },
                        {
                            "const": "outscale.security.IdentityAndAccessManagement"
                        },
                        {
                            "const": "outscale.storage.SimpleStorageService"
                        },
                        {
                            "const": "outscale.storage.Storage"
                        },
                        {
                            "const": "programming.flowchart.Action"
                        },
                        {
                            "const": "programming.flowchart.Collate"
                        },
                        {
                            "const": "programming.flowchart.Database"
                        },
                        {
                            "const": "programming.flowchart.Decision"
                        },
                        {
                            "const": "programming.flowchart.Delay"
                        },
                        {
                            "const": "programming.flowchart.Display"
                        },
                        {
                            "const": "programming.flowchart.Document"
                        },
                        {
                            "const": "programming.flowchart.InputOutput"
                        },
                        {
                            "const": "programming.flowchart.Inspection"
                        },
                        {
                            "const": "programming.flowchart.InternalStorage"
                        },
                        {
                            "const": "programming.flowchart.LoopLimit"
                        },
                        {
                            "const": "programming.flowchart.ManualInput"
                        },
                        {
                            "const": "programming.flowchart.ManualLoop"
                        },
                        {
                            "const": "programming.flowchart.Merge"
                        },
                        {
                            "const": "programming.flowchart.MultipleDocuments"
                        },
                        {
                            "const": "programming.flowchart.OffPageConnectorLeft"
                        },
                        {
                            "const": "programming.flowchart.OffPageConnectorRight"
                        },
                        {
                            "const": "programming.flowchart.Or"
                        },
                        {
                            "const": "programming.flowchart.PredefinedProcess"
                        },
                        {
                            "const": "programming.flowchart.Preparation"
                        },
                        {
                            "const": "programming.flowchart.Sort"
                        },
                        {
                            "const": "programming.flowchart.StartEnd"
                        },
                        {
                            "const": "programming.flowchart.StoredData"
                        },
                        {
                            "const": "programming.flowchart.SummingJunction"
                        },
                        {
                            "const": "programming.framework.Angular"
                        },
                        {
                            "const": "programming.framework.Backbone"
                        },
                        {
                            "const": "programming.framework.Django"
                        },
                        {
                            "const": "programming.framework.Ember"
                        },
                        {
                            "const": "programming.framework.Fastapi"
                        },
                        {
                            "const": "programming.framework.FastAPI"
                        },
                        {
                            "const": "programming.framework.Flask"
                        },
                        {
                            "const": "programming.framework.Flutter"
                        },
                        {
                            "const": "programming.framework.Graphql"
                        },
                        {
                            "const": "programming.framework.GraphQL"
                        },
                        {
                            "const": "programming.framework.Laravel"
                        },
                        {
                            "const": "programming.framework.Micronaut"
                        },
                        {
                            "const": "programming.framework.Rails"
                        },
                        {
                            "const": "programming.framework.React"
                        },
                        {
                            "const": "programming.framework.Spring"
                        },
                        {
                            "const": "programming.framework.Starlette"
                        },
                        {
                            "const": "programming.framework.Svelte"
                        },
                        {
                            "const": "programming.framework.Vue"
                        },
                        {
                            "const": "programming.language.Bash"
                        },
                        {
                            "const": "programming.language.C"
                        },
                        {
                            "const": "programming.language.Cpp"
                        },
                        {
                            "const": "programming.language.Csharp"
                        },
                        {
                            "const": "programming.language.Dart"
                        },
                        {
                            "const": "programming.language.Elixir"
                        },
                        {
                            "const": "programming.language.Erlang"
                        },
                        {
                            "const": "programming.language.Go"
                        },
                        {
                            "const": "programming.language.Java"
                        },
                        {
                            "const": "programming.language.Javascript"
                        },
                        {
                            "const": "programming.language.JavaScript"
                        },
                        {
                            "const": "programming.language.Kotlin"
                        },
                        {
                            "const": "programming.language.Latex"
                        },
                        {
                            "const": "programming.language.Matlab"
                        },
                        {
                            "const": "programming.language.Nodejs"
                        },
                        {
                            "const": "programming.language.NodeJS"
                        },
                        {
                            "const": "programming.language.Php"
                        },
                        {
                            "const": "programming.language.PHP"
                        },
                        {
                            "const": "programming.language.Python"
                        },
                        {
                            "const": "programming.language.R"
                        },
                        {
                            "const": "programming.language.Ruby"
                        },
                        {
                            "const": "programming.language.Rust"
                        },
                        {
                            "const": "programming.language.Scala"
                        },
                        {
                            "const": "programming.language.Swift"
                        },
                        {
                            "const": "programming.language.Typescript"
                        },
                        {
                            "const": "programming.language.TypeScript"
                        },
                        {
                            "const": "programming.runtime.Dapr"
                        },
                        {
                            "const": "saas.alerting.Newrelic"
                        },
                        {
                            "const": "saas.alerting.Opsgenie"
                        },
                        {
                            "const": "saas.alerting.Pushover"
                        },
                        {
                            "const": "saas.alerting.Xmatters"
                        },
                        {
                            "const": "saas.alerting.Pagerduty"
                        },
                        {
                            "const": "saas.analytics.Dataform"
                        },
                        {
                            "const": "saas.analytics.Snowflake"
                        },
                        {
                            "const": "saas.analytics.Stitch"
                        },
                        {
                            "const": "saas.cdn.Akamai"
                        },
                        {
                            "const": "saas.cdn.Cloudflare"
                        },
                        {
                            "const": "saas.cdn.Fastly"
                        },
                        {
                            "const": "saas.chat.Discord"
                        },
                        {
                            "const": "saas.chat.Line"
                        },
                        {
                            "const": "saas.chat.Mattermost"
                        },
                        {
                            "const": "saas.chat.Messenger"
                        },
                        {
                            "const": "saas.chat.RocketChat"
                        },
                        {
                            "const": "saas.chat.Slack"
                        },
                        {
                            "const": "saas.chat.Teams"
                        },
                        {
                            "const": "saas.chat.Telegram"
                        },
                        {
                            "const": "saas.communication.Twilio"
                        },
                        {
                            "const": "saas.filesharing.Nextcloud"
                        },
                        {
                            "const": "saas.identity.Auth0"
                        },
                        {
                            "const": "saas.identity.Okta"
                        },
                        {
                            "const": "saas.logging.Datadog"
                        },
                        {
                            "const": "saas.logging.DataDog"
                        },
                        {
                            "const": "saas.logging.Newrelic"
                        },
                        {
                            "const": "saas.logging.NewRelic"
                        },
                        {
                            "const": "saas.logging.Papertrail"
                        },
                        {
                            "const": "saas.media.Cloudinary"
                        },
                        {
                            "const": "saas.recommendation.Recombee"
                        },
                        {
                            "const": "saas.social.Facebook"
                        },
                        {
                            "const": "saas.social.Twitter"
                        }
                    ]
                },
                "relates": {
                    "type": "array",
                    "description": "Relations of the resource",
                    "items": {
                        "$ref": "#/definitions/Relates"
                    }
                },
                "of": {
                    "type": "array",
                    "description": "Clusters and groups can have a list of resources inside them",
                    "items": {
                        "$ref": "#/definitions/Resource"
                    }
                }
            },
            "required": [
                "id",
                "name",
                "type"
            ],
            "title": "Resource"
        },
        "Relates": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "to": {
                    "type": "string",
                    "description": "A chain of identifiers to a resource via a dot from root"
                },
                "direction": {
                    "type": "string",
                    "description": "A direction of a relationship",
                    "oneOf": [
                          {
                            "const": "incoming"
                          },
                          {
                            "const": "outgoing"
                          },
                          {
                            "const": "bidirectional"
                          },
                          {
                            "const": "undirected"
                          }
                    ]
                },
                "label": {
                    "type": "string",
                    "description": "A label of a relationship"
                },
                "color": {
                    "type": "string",
                    "description": "A color of a relationship"
                },
                "style": {
                    "type": "string",
                    "description": "A style of a relationship"
                }
            },
            "required": [
                "to",
                "direction"
            ],
            "title": "Relate"
        },
        "Style": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "graph": {
                    "$ref": "#/definitions/Graph"
                },
                "node": {
                    "$ref": "#/definitions/Node"
                },
                "edge": {
                    "$ref": "#/definitions/Edge"
                }
            },
            "title": "Style"
        },
        "Node": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "area": {
                    "type": "number",
                    "description": "Indicates the preferred area for a node or empty cluster. For patchwork only"
                },
                "class": {
                    "type": "string",
                    "description": "Classnames to attach to the node, edge, graph, or cluster's SVG element. For svg only"
                },
                "color": {
                    "type": "string",
                    "description": "Basic drawing color for graphics, not text"
                },
                "colorscheme": {
                    "type": "string",
                    "description": "A color scheme namespace: the context for interpreting color names"
                },
                "comment": {
                    "type": "string",
                    "description": "Comments are inserted into output"
                },
                "distortion": {
                    "type": "number",
                    "description": "Distortion factor for shape=polygon"
                },
                "fillcolor": {
                    "type": "string",
                    "description": "Color used to fill the background of a node or cluster"
                },
                "fixedsize": {
                    "type": "boolean",
                    "description": "Whether to use the specified width and height attributes to choose node size (rather than sizing to fit the node contents)"
                },
                "fontcolor": {
                    "type": "string",
                    "description": "Color used for text"
                },
                "fontname": {
                    "type": "string",
                    "description": "Font used for text"
                },
                "fontsize": {
                    "type": "number",
                    "description": "Font size, in points, used for text"
                },
                "gradientangle": {
                    "type": "number",
                    "description": "If a gradient fill is being used, this determines the angle of the fill"
                },
                "group": {
                    "type": "string",
                    "description": "Name for a group of nodes, for bundling edges avoiding crossings. For dot only"
                },
                "height": {
                    "type": "string",
                    "description": "Height of node, in inches"
                },
                "href": {
                    "type": "string",
                    "description": "Synonym for URL. For map, postscript, svg only"
                },
                "id": {
                    "type": "string",
                    "description": "Identifier for graph objects. For map, postscript, svg only"
                },
                "image": {
                    "type": "string",
                    "description": "Gives the name of a file containing an image to be displayed inside a node"
                },
                "imagepos": {
                    "type": "string",
                    "description": "Controls how an image is positioned within its containing node"
                },
                "imagescale": {
                    "type": "boolean",
                    "description": "Controls how an image fills its containing node"
                },
                "label": {
                    "type": "string",
                    "description": "Text label attached to objects"
                },
                "labelloc": {
                    "type": "string",
                    "description": "Vertical placement of labels for nodes, root graphs and clusters"
                },
                "layer": {
                    "type": "string",
                    "description": "Specifies layers in which the node, edge or cluster is present"
                },
                "margin": {
                    "type": "number",
                    "description": "For graphs, this sets x and y margins of canvas, in inches"
                },
                "nojustify": {
                    "type": "boolean",
                    "description": "Whether to justify multiline text vs the previous text line (rather than the side of the container)"
                },
                "ordering": {
                    "type": "string",
                    "description": "Constrains the left-to-right ordering of node edges. For dot only"
                },
                "orientation": {
                    "type": "number",
                    "description": "node shape rotation angle, or graph orientation"
                },
                "penwidth": {
                    "type": "number",
                    "description": "Specifies the width of the pen, in points, used to draw lines and curves"
                },
                "peripheries": {
                    "type": "number",
                    "description": "Set number of peripheries used in polygonal shapes and cluster boundaries"
                },
                "pin": {
                    "type": "boolean",
                    "description": "Keeps the node at the node's given input position. For neato, fdp only"
                },
                "pos": {
                    "type": "string",
                    "description": "Position of node, or spline control points. For neato, fdp only"
                },
                "rects": {
                    "type": "string",
                    "description": "Rectangles for fields of records, in points. For write only"
                },
                "regular": {
                    "type": "boolean",
                    "description": "If true, force polygon to be regular"
                },
                "root": {
                    "type": "string",
                    "description": "Specifies nodes to be used as the center of the layout. For twopi, circo only"
                },
                "samplepoints": {
                    "type": "number",
                    "description": "Gives the number of points used for a circle/ellipse node"
                },
                "shape": {
                    "type": "string",
                    "description": "Sets the shape of a node"
                },
                "shapefile": {
                    "type": "string",
                    "description": "A file containing user-supplied node content"
                },
                "showboxes": {
                    "type": "number",
                    "description": "Print guide boxes for debugging. For dot only"
                },
                "sides": {
                    "type": "number",
                    "description": "Number of sides when shape=polygon"
                },
                "skew": {
                    "type": "number",
                    "description": "Skew factor for shape=polygon"
                },
                "sortv": {
                    "type": "number",
                    "description": "Sort order of graph components for ordering packmode packing"
                },
                "style": {
                    "type": "string",
                    "description": "Set style information for components of the graph"
                },
                "target": {
                    "type": "string",
                    "description": "If the object has a URL, this attribute determines which window of the browser is used for the URL. For map, svg only"
                },
                "tooltip": {
                    "type": "string",
                    "description": "Tooltip (mouse hover text) attached to the node, edge, cluster, or graph. For cmap, svg only"
                },
                "URL": {
                    "type": "string",
                    "description": "Hyperlinks incorporated into device-dependent output. For map, postscript, svg only"
                },
                "vertices": {
                    "type": "array",
                    "description": "Sets the coordinates of the vertices of the node's polygon, in inches. For write only"
                },
                "width": {
                    "type": "number",
                    "description": "Width of node, in inches"
                },
                "xlabel": {
                    "type": "string",
                    "description": "External label for a node or edge"
                },
                "xlp": {
                    "type": "string",
                    "description": "Position of an exterior label, in points. For write only"
                },
                "z": {
                    "type": "number",
                    "description": "Z-coordinate value for 3D layouts and displays"
                }
            },
            "title": "Node"
        },
        "Graph": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "_background": {
                    "type": "string",
                    "description": "A string in the xdot format specifying an arbitrary background"
                },
                "bb": {
                    "type": "string",
                    "description": "Bounding box of drawing in points. For write only"
                },
                "beautify": {
                    "type": "boolean",
                    "description": "Whether to draw leaf nodes uniformly in a circle around the root node in sfdp. For sfdp only"
                },
                "bgcolor": {
                    "type": "string",
                    "description": "Canvas background color"
                },
                "center": {
                    "type": "boolean",
                    "description": "Whether to center the drawing in the output canvas"
                },
                "charset": {
                    "type": "string",
                    "description": "Character encoding used when interpreting string input as a text label"
                },
                "class": {
                    "type": "string",
                    "description": "Classnames to attach to the node, edge, graph, or cluster's SVG element. For svg only"
                },
                "clusterrank": {
                    "type": "string",
                    "description": "Mode used for handling clusters. For dot only"
                },
                "colorscheme": {
                    "type": "string",
                    "description": "A color scheme namespace: the context for interpreting color names"
                },
                "comment": {
                    "type": "string",
                    "description": "Comments are inserted into output"
                },
                "compound": {
                    "type": "boolean",
                    "description": "If true, allow edges between clusters. For dot only"
                },
                "concentrate": {
                    "type": "boolean",
                    "description": "If true, use edge concentrators"
                },
                "Damping": {
                    "type": "number",
                    "description": "Factor damping force motions. For neato only"
                },
                "defaultdist": {
                    "type": "number",
                    "description": "The distance between nodes in separate connected components. For neato only"
                },
                "dim": {
                    "type": "number",
                    "description": "Set the number of dimensions used for the layout. For neato, fdp, sfdp only"
                },
                "dimen": {
                    "type": "number",
                    "description": "Set the number of dimensions used for rendering. For neato, fdp, sfdp only"
                },
                "diredgeconstraints": {
                    "type": "string",
                    "description": "Whether to constrain most edges to point downwards. For neato only"
                },
                "dpi": {
                    "type": "number",
                    "description": "Specifies the expected number of pixels per inch on a display device. For bitmap output, svg only"
                },
                "epsilon": {
                    "type": "number",
                    "description": "Terminating condition. For neato only"
                },
                "esep": {
                    "type": "number",
                    "description": "Margin used around polygons for purposes of spline edge routing. For neato only"
                },
                "fontcolor": {
                    "type": "string",
                    "description": "Color used for text"
                },
                "fontname": {
                    "type": "string",
                    "description": "Font used for text"
                },
                "fontnames": {
                    "type": "string",
                    "description": "Allows user control of how basic fontnames are represented in SVG output. For svg only"
                },
                "fontpath": {
                    "type": "string",
                    "description": "Directory list used by libgd to search for bitmap fonts"
                },
                "fontsize": {
                    "type": "number",
                    "description": "Font size, in points, used for text"
                },
                "forcelabels": {
                    "type": "boolean",
                    "description": "Whether to force placement of all xlabels, even if overlapping"
                },
                "gradientangle": {
                    "type": "number",
                    "description": "If a gradient fill is being used, this determines the angle of the fill"
                },
                "href": {
                    "type": "string",
                    "description": "Synonym for URL. For map, postscript, svg only"
                },
                "id": {
                    "type": "string",
                    "description": "Identifier for graph objects. For map, postscript, svg only"
                },
                "imagepath": {
                    "type": "string",
                    "description": "A list of directories in which to look for image files"
                },
                "inputscale": {
                    "type": "number",
                    "description": "Scales the input positions to convert between length units. For neato, fdp only"
                },
                "K": {
                    "type": "number",
                    "description": "Spring constant used in virtual physical model. For fdp, sfdp only"
                },
                "label": {
                    "type": "string",
                    "description": "Text label attached to objects"
                },
                "label_scheme": {
                    "type": "number",
                    "description": "Whether to treat a node whose name has the form |edgelabel|* as a special node representing an edge label. For sfdp only"
                },
                "labeljust": {
                    "type": "string",
                    "description": "Justification for graph & cluster labels"
                },
                "labelloc": {
                    "type": "string",
                    "description": "Vertical placement of labels for nodes, root graphs and clusters"
                },
                "landscape": {
                    "type": "boolean",
                    "description": "If true, the graph is rendered in landscape mode"
                },
                "layerlistsep": {
                    "type": "string",
                    "description": "The separator characters used to split attributes of type layerRange into a list of ranges"
                },
                "layers": {
                    "type": "array",
                    "description": "A linearly ordered list of layer names attached to the graph"
                },
                "layerselect": {
                    "type": "string",
                    "description": "Selects a list of layers to be emitted"
                },
                "layersep": {
                    "type": "string",
                    "description": "The separator characters for splitting the layers attribute into a list of layer names"
                },
                "layout": {
                    "type": "string",
                    "description": "Which layout engine to use"
                },
                "levels": {
                    "type": "number",
                    "description": "Number of levels allowed in the multilevel scheme. For sfdp only"
                },
                "levelsgap": {
                    "type": "number",
                    "description": "strictness of neato level constraints. For neato only"
                },
                "lheight": {
                    "type": "number",
                    "description": "Height of graph or cluster label, in inches. For write only"
                },
                "linelength": {
                    "type": "number",
                    "description": "How long strings should get before overflowing to next line, for text output"
                },
                "lp": {
                    "type": "string",
                    "description": "Label center position. For write only"
                },
                "lwidth": {
                    "type": "number",
                    "description": "Width of graph or cluster label, in inches. For write only"
                },
                "margin": {
                    "type": "number",
                    "description": "For graphs, this sets x and y margins of canvas, in inches"
                },
                "maxiter": {
                    "type": "number",
                    "description": "Sets the number of iterations used. For neato, fdp only"
                },
                "mclimit": {
                    "type": "number",
                    "description": "Scale factor for mincross (mc) edge crossing minimiser parameters. For dot only"
                },
                "mindist": {
                    "type": "number",
                    "description": "Specifies the minimum separation between all nodes. For circo only"
                },
                "mode": {
                    "type": "string",
                    "description": "Technique for optimizing the layout. For neato only"
                },
                "model": {
                    "type": "string",
                    "description": "Specifies how the distance matrix is computed for the input graph. For neato only"
                },
                "newrank": {
                    "type": "boolean",
                    "description": "Whether to use a single global ranking, ignoring clusters. For dot only"
                },
                "nodesep": {
                    "type": "number",
                    "description": "In dot, nodesep specifies the minimum space between two adjacent nodes in the same rank, in inches"
                },
                "nojustify": {
                    "type": "boolean",
                    "description": "Whether to justify multiline text vs the previous text line (rather than the side of the container)"
                },
                "normalize": {
                    "type": "number",
                    "description": "normalizes coordinates of final layout. For neato, fdp, sfdp, twopi, circo only"
                },
                "notranslate": {
                    "type": "boolean",
                    "description": "Whether to avoid translating layout to the origin point. For neato only"
                },
                "nslimit": {
                    "type": "number",
                    "description": "Sets number of iterations in network simplex applications. For dot only"
                },
                "nslimit1": {
                    "type": "number",
                    "description": "Sets number of iterations in network simplex applications. For dot only"
                },
                "oneblock": {
                    "type": "boolean",
                    "description": "Whether to draw circo graphs around one circle. For circo only"
                },
                "ordering": {
                    "type": "string",
                    "description": "Constrains the left-to-right ordering of node edges. For dot only"
                },
                "orientation": {
                    "type": "number",
                    "description": "node shape rotation angle, or graph orientation"
                },
                "outputorder": {
                    "type": "string",
                    "description": "Specify order in which nodes and edges are drawn"
                },
                "overlap": {
                    "type": "string",
                    "description": "Determines if and how node overlaps should be removed. For fdp, neato only"
                },
                "overlap_scaling": {
                    "type": "number",
                    "description": "Scale layout by factor, to reduce node overlap. For prism, neato, sfdp, fdp, circo, twopi only"
                },
                "overlap_shrink": {
                    "type": "boolean",
                    "description": "Whether the overlap removal algorithm should perform a compression pass to reduce the size of the layout. For prism only"
                },
                "pack": {
                    "type": "boolean",
                    "description": "Whether each connected component of the graph should be laid out separately, and then the graphs packed together"
                },
                "packmode": {
                    "type": "string",
                    "description": "How connected components should be packed"
                },
                "pad": {
                    "type": "number",
                    "description": "Inches to extend the drawing area around the minimal area needed to draw the graph"
                },
                "page": {
                    "type": "number",
                    "description": "Width and height of output pages, in inches"
                },
                "pagedir": {
                    "type": "string",
                    "description": "The order in which pages are emitted"
                },
                "quadtree": {
                    "type": "string",
                    "description": "Quadtree scheme to use. For sfdp only"
                },
                "quantum": {
                    "type": "number",
                    "description": "If quantum > 0.0, node label dimensions will be rounded to integral multiples of the quantum"
                },
                "rankdir": {
                    "type": "string",
                    "description": "Sets direction of graph layout. For dot only"
                },
                "ranksep": {
                    "type": "number",
                    "description": "Specifies separation between ranks. For dot, twopi only"
                },
                "ratio": {
                    "type": "number",
                    "description": "Sets the aspect ratio (drawing height/drawing width) for the drawing"
                },
                "remincross": {
                    "type": "boolean",
                    "description": "If there are multiple clusters, whether to run edge crossing minimization a second time. For dot only"
                },
                "repulsiveforce": {
                    "type": "number",
                    "description": "The power of the repulsive force used in an extended Fruchterman-Reingold. For sfdp only"
                },
                "resolution": {
                    "type": "number",
                    "description": "Synonym for dpi. For bitmap output, svg only"
                },
                "root": {
                    "type": "string",
                    "description": "Specifies nodes to be used as the center of the layout. For twopi, circo only"
                },
                "rotate": {
                    "type": "number",
                    "description": "If rotate=90, sets drawing orientation to landscape"
                },
                "rotation": {
                    "type": "number",
                    "description": "Rotates the final layout counter-clockwise by the specified number of degrees. For sfdp only"
                },
                "scale": {
                    "type": "number",
                    "description": "Scales layout by the given factor after the initial layout. For neato, twopi only"
                },
                "searchsize": {
                    "type": "number",
                    "description": "During network simplex, the maximum number of edges with negative cut values to search when looking for an edge with minimum cut value. For dot only"
                },
                "sep": {
                    "type": "string",
                    "description": "Margin to leave around nodes when removing node overlap. For fdp, neato only"
                },
                "showboxes": {
                    "type": "number",
                    "description": "Print guide boxes for debugging. For dot only"
                },
                "size": {
                    "type": "number",
                    "description": "Maximum width and height of drawing, in inches"
                },
                "smoothing": {
                    "type": "string",
                    "description": "Specifies a post-processing step used to smooth out an uneven distribution of nodes. For sfdp only"
                },
                "sortv": {
                    "type": "number",
                    "description": "Sort order of graph components for ordering packmode packing"
                },
                "splines": {
                    "type": ["boolean", "string"],
                    "description": "Controls how, and if, edges are represented"
                },
                "start": {
                    "type": "string",
                    "description": "Parameter used to determine the initial layout of nodes. For neato, fdp, sfdp only"
                },
                "style": {
                    "type": "string",
                    "description": "Set style information for components of the graph"
                },
                "stylesheet": {
                    "type": "string",
                    "description": "A URL or pathname specifying an XML style sheet, used in SVG output. For svg only"
                },
                "target": {
                    "type": "string",
                    "description": "If the object has a URL, this attribute determines which window of the browser is used for the URL. For map, svg only"
                },
                "TBbalance": {
                    "type": "string",
                    "description": "Which rank to move floating (loose) nodes to. For dot only"
                },
                "tooltip": {
                    "type": "string",
                    "description": "Tooltip (mouse hover text) attached to the node, edge, cluster, or graph. For cmap, svg only"
                },
                "truecolor": {
                    "type": "boolean",
                    "description": "Whether internal bitmap rendering relies on a truecolor color model or uses. For bitmap output only"
                },
                "URL": {
                    "type": "string",
                    "description": "Hyperlinks incorporated into device-dependent output. For map, postscript, svg only"
                },
                "viewport": {
                    "type": "string",
                    "description": "Clipping window on final drawing"
                },
                "voro_margin": {
                    "type": "number",
                    "description": "Tuning margin of Voronoi technique. For neato, fdp, sfdp, twopi, circo only"
                },
                "xdotversion": {
                    "type": "string",
                    "description": "Determines the version of xdot used in output. For xdot only"
                }
            },
            "title": "Graph"
        },
        "Edge": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "arrowhead": {
                    "type": "string",
                    "description": "Style of arrowhead on the head node of an edge"
                },
                "arrowsize": {
                    "type": "number",
                    "description": "Multiplicative scale factor for arrowheads"
                },
                "arrowtail": {
                    "type": "string",
                    "description": "Style of arrowhead on the tail node of an edge"
                },
                "class": {
                    "type": "string",
                    "description": "Classnames to attach to the node, edge, graph, or cluster's SVG element. For svg only"
                },
                "color": {
                    "type": "string",
                    "description": "Basic drawing color for graphics, not text"
                },
                "colorscheme":{
                    "type": "string",
                    "description": "A color scheme namespace: the context for interpreting color names"
                },
                "comment": {
                    "type": "string",
                    "description": "Comments are inserted into output"
                },
                "constraint": {
                    "type": "boolean",
                    "description": "If false, the edge is not used in ranking the nodes. For dot only"
                },
                "decorate": {
                    "type": "boolean",
                    "description": "Whether to connect the edge label to the edge with a line"
                },
                "dir": {
                    "type": "string",
                    "description": "Edge type for drawing arrowheads"
                },
                "edgehref": {
                    "type": "string",
                    "description": "Synonym for edgeURL. For map, svg only"
                },
                "edgetarget": {
                    "type": "string",
                    "description": "Browser window to use for the edgeURL link. For map, svg only"
                },
                "edgetooltip": {
                    "type": "string",
                    "description": "Tooltip annotation attached to the non-label part of an edge. For cmap, svg only"
                },
                "edgeURL": {
                    "type": "string",
                    "description": "The link for the non-label parts of an edge. For map, svg only"
                },
                "fillcolor": {
                    "type": "string",
                    "description": "Color used to fill the background of a node or cluster"
                },
                "fontcolor": {
                    "type": "string",
                    "description": "Color used for text"
                },
                "fontname": {
                    "type": "string",
                    "description": "Font used for text"
                },
                "fontsize": {
                    "type": "number",
                    "description": "Font size, in points, used for text"
                },
                "head_lp": {
                    "type": "string",
                    "description": "Center position of an edge's head label. For write only"
                },
                "headclip": {
                    "type": "boolean",
                    "description": "If true, the head of an edge is clipped to the boundary of the head node"
                },
                "headhref": {
                    "type": "string",
                    "description": "Synonym for headURL. For map, svg only"
                },
                "headlabel": {
                    "type": "string",
                    "description": "Text label to be placed near head of edge"
                },
                "headport": {
                    "type": "string",
                    "description": "Indicates where on the head node to attach the head of the edge"
                },
                "headtarget": {
                    "type": "string",
                    "description": "Browser window to use for the headURL link. For map, svg only"
                },
                "headtooltip": {
                    "type": "string",
                    "description": "Tooltip annotation attached to the head of an edge. For cmap, svg only"
                },
                "headURL": {
                    "type": "string",
                    "description": "If defined, headURL is output as part of the head label of the edge. For map, svg only"
                },
                "href": {
                    "type": "string",
                    "description": "Synonym for URL. For map, postscript, svg only"
                },
                "id": {
                    "type": "string",
                    "description": "Identifier for graph objects. For map, postscript, svg only"
                },
                "label": {
                    "type": "string",
                    "description": "Text label attached to objects"
                },
                "labelangle": {
                    "type": "number",
                    "description": "The angle (in degrees) in polar coordinates of the head & tail edge labels"
                },
                "labeldistance": {
                    "type": "number",
                    "description": "Scaling factor for the distance of headlabel / taillabel from the head / tail nodes"
                },
                "labelfloat": {
                    "type": "boolean",
                    "description": "If true, allows edge labels to be less constrained in position"
                },
                "labelfontcolor": {
                    "type": "string",
                    "description": "Color used for headlabel and taillabel"
                },
                "labelfontname": {
                    "type": "string",
                    "description": "Font for headlabel and taillabel"
                },
                "labelfontsize": {
                    "type": "number",
                    "description": "Font size of headlabel and taillabel"
                },
                "labelhref": {
                    "type": "string",
                    "description": "Synonym for labelURL. For map, svg only"
                },
                "labeltarget": {
                    "type": "string",
                    "description": "Browser window to open labelURL links in. For map, svg only"
                },
                "labeltooltip": {
                    "type": "string",
                    "description": "Tooltip annotation attached to label of an edge. For cmap, svg only"
                },
                "labelURL": {
                    "type": "string",
                    "description": "If defined, labelURL is the link used for the label of an edge. For map, svg only"
                },
                "layer": {
                    "type": "string",
                    "description": "Specifies layers in which the node, edge or cluster is present"
                },
                "len": {
                    "type": "number",
                    "description": "Preferred edge length, in inches. For neato, fdp only"
                },
                "lhead": {
                    "type": "string",
                    "description": "Logical head of an edge. For dot only"
                },
                "lp": {
                    "type": "string",
                    "description": "Label center position. For write only"
                },
                "ltail": {
                    "type": "string",
                    "description": "Logical tail of an edge. For dot only"
                },
                "minlen": {
                    "type": "number",
                    "description": "Minimum edge length (rank difference between head and tail). For dot only"
                },
                "nojustify": {
                    "type": "boolean",
                    "description": "Whether to justify multiline text vs the previous text line (rather than the side of the container)"
                },
                "penwidth": {
                    "type": "number",
                    "description": "Specifies the width of the pen, in points, used to draw lines and curves"
                },
                "pos": {
                    "type": "string",
                    "description": "Position of node, or spline control points. For neato, fdp only"
                },
                "samehead": {
                    "type": "string",
                    "description": "Edges with the same head and the same samehead value are aimed at the same point on the head. For dot only"
                },
                "sametail": {
                    "type": "string",
                    "description": "Edges with the same tail and the same sametail value are aimed at the same point on the tail. For dot only"
                },
                "showboxes": {
                    "type": "number",
                    "description": "Print guide boxes for debugging. For dot only"
                },
                "style": {
                    "type": "string",
                    "description": "Set style information for components of the graph"
                },
                "tail_lp": {
                    "type": "string",
                    "description": "Position of an edge's tail label, in points. For write only"
                },
                "tailclip": {
                    "type": "boolean",
                    "description": "If true, the tail of an edge is clipped to the boundary of the tail node"
                },
                "tailhref": {
                    "type": "string",
                    "description": "Synonym for tailURL. For map, svg only"
                },
                "taillabel": {
                    "type": "string",
                    "description": "Text label to be placed near tail of edge"
                },
                "tailport": {
                    "type": "string",
                    "description": "Indicates where on the tail node to attach the tail of the edge"
                },
                "tailtarget": {
                    "type": "string",
                    "description": "Browser window to use for the tailURL link. For map, svg only"
                },
                "tailtooltip":{
                    "type": "string",
                    "description": "Tooltip annotation attached to the tail of an edge. For cmap, svg only"
                },
                "tailURL": {
                    "type": "string",
                    "description": "If defined, tailURL is output as part of the tail label of the edge. For map, svg only"
                },
                "target": {
                    "type": "string",
                    "description": "If the object has a URL, this attribute determines which window of the browser is used for the URL. For map, svg only"
                },
                "tooltip": {
                    "type": "string",
                    "description": "Tooltip (mouse hover text) attached to the node, edge, cluster, or graph. For cmap, svg only"
                },
                "URL": {
                    "type": "string",
                    "description": "Hyperlinks incorporated into device-dependent output. For map, postscript, svg only"
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of edge"
                },
                "xlabel": {
                    "type": "string",
                    "description": "External label for a node or edge"
                },
                "xlp": {
                    "type": "string",
                    "description": "Position of an exterior label, in points. For write only"
                }
            },
            "title": "Edge"
        }
    }
}
